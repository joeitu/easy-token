{"version":3,"file":"657.main.js","mappings":"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","sources":["webpack://inrupt_tut/./node_modules/base64-js/index.js","webpack://inrupt_tut/./node_modules/buffer/index.js","webpack://inrupt_tut/./node_modules/ieee754/index.js","webpack://inrupt_tut/./node_modules/inherits/inherits_browser.js","webpack://inrupt_tut/./node_modules/n3/src/IRIs.js","webpack://inrupt_tut/./node_modules/n3/src/N3Lexer.js","webpack://inrupt_tut/./node_modules/n3/src/N3Util.js","webpack://inrupt_tut/./node_modules/n3/src/N3DataFactory.js","webpack://inrupt_tut/./node_modules/n3/src/N3Parser.js","webpack://inrupt_tut/./node_modules/n3/src/N3Writer.js","webpack://inrupt_tut/./node_modules/n3/src/N3Store.js","webpack://inrupt_tut/./node_modules/n3/src/N3StreamParser.js","webpack://inrupt_tut/./node_modules/n3/src/N3StreamWriter.js","webpack://inrupt_tut/./node_modules/queue-microtask/index.js","webpack://inrupt_tut/./node_modules/readable-stream/errors-browser.js","webpack://inrupt_tut/./node_modules/readable-stream/lib/_stream_duplex.js","webpack://inrupt_tut/./node_modules/readable-stream/lib/_stream_passthrough.js","webpack://inrupt_tut/./node_modules/readable-stream/lib/_stream_readable.js","webpack://inrupt_tut/./node_modules/readable-stream/lib/_stream_transform.js","webpack://inrupt_tut/./node_modules/readable-stream/lib/_stream_writable.js","webpack://inrupt_tut/./node_modules/readable-stream/lib/internal/streams/async_iterator.js","webpack://inrupt_tut/./node_modules/readable-stream/lib/internal/streams/buffer_list.js","webpack://inrupt_tut/./node_modules/readable-stream/lib/internal/streams/destroy.js","webpack://inrupt_tut/./node_modules/readable-stream/lib/internal/streams/end-of-stream.js","webpack://inrupt_tut/./node_modules/readable-stream/lib/internal/streams/from-browser.js","webpack://inrupt_tut/./node_modules/readable-stream/lib/internal/streams/pipeline.js","webpack://inrupt_tut/./node_modules/readable-stream/lib/internal/streams/state.js","webpack://inrupt_tut/./node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack://inrupt_tut/./node_modules/readable-stream/readable-browser.js","webpack://inrupt_tut/./node_modules/safe-buffer/index.js","webpack://inrupt_tut/./node_modules/string_decoder/lib/string_decoder.js","webpack://inrupt_tut/./node_modules/util-deprecate/browser.js"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","const RDF  = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    XSD  = 'http://www.w3.org/2001/XMLSchema#',\n    SWAP = 'http://www.w3.org/2000/10/swap/';\n\nexport default {\n  xsd: {\n    decimal: `${XSD}decimal`,\n    boolean: `${XSD}boolean`,\n    double:  `${XSD}double`,\n    integer: `${XSD}integer`,\n    string:  `${XSD}string`,\n  },\n  rdf: {\n    type:       `${RDF}type`,\n    nil:        `${RDF}nil`,\n    first:      `${RDF}first`,\n    rest:       `${RDF}rest`,\n    langString: `${RDF}langString`,\n  },\n  owl: {\n    sameAs: 'http://www.w3.org/2002/07/owl#sameAs',\n  },\n  r: {\n    forSome: `${SWAP}reify#forSome`,\n    forAll:  `${SWAP}reify#forAll`,\n  },\n  log: {\n    implies: `${SWAP}log#implies`,\n  },\n};\n","// **N3Lexer** tokenizes N3 documents.\nimport namespaces from './IRIs';\nimport queueMicrotask from 'queue-microtask';\n\nconst { xsd } = namespaces;\n\n// Regular expression and replacement string to escape N3 strings\nconst escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\([^])/g;\nconst escapeReplacements = {\n  '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n  'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n  '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n  '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n  '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n};\nconst illegalIriChars = /[\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]/;\n\nconst lineModeRegExps = {\n  _iri: true,\n  _unescapedIri: true,\n  _simpleQuotedString: true,\n  _langcode: true,\n  _blank: true,\n  _newline: true,\n  _comment: true,\n  _whitespace: true,\n  _endOfFile: true,\n};\nconst invalidRegExp = /$0^/;\n\n// ## Constructor\nexport default class N3Lexer {\n  constructor(options) {\n    // ## Regular expressions\n    // It's slightly faster to have these as properties than as in-scope variables\n    this._iri = /^<((?:[^ <>{}\\\\]|\\\\[uU])+)>[ \\t]*/; // IRI with escape sequences; needs sanity check after unescaping\n    this._unescapedIri = /^<([^\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]*)>[ \\t]*/; // IRI without escape sequences; no unescaping\n    this._simpleQuotedString = /^\"([^\"\\\\\\r\\n]*)\"(?=[^\"])/; // string without escape sequences\n    this._simpleApostropheString = /^'([^'\\\\\\r\\n]*)'(?=[^'])/;\n    this._langcode = /^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\\-])/i;\n    this._prefix = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:(?=[#\\s<])/;\n    this._prefixed = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:((?:(?:[0-:A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])(?:(?:[\\.\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])*(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~]))?)?)(?:[ \\t]+|(?=\\.?[,;!\\^\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._variable = /^\\?(?:(?:[A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?=[.,;!\\^\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._blank = /^_:((?:[0-9A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?:[ \\t]+|(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._number = /^[\\-+]?(?:(\\d+\\.\\d*|\\.?\\d+)[eE][\\-+]?|\\d*(\\.)?)\\d+(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._boolean = /^(?:true|false)(?=[.,;\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._keyword = /^@[a-z]+(?=[\\s#<:])/i;\n    this._sparqlKeyword = /^(?:PREFIX|BASE|GRAPH)(?=[\\s#<])/i;\n    this._shortPredicates = /^a(?=[\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._newline = /^[ \\t]*(?:#[^\\n\\r]*)?(?:\\r\\n|\\n|\\r)[ \\t]*/;\n    this._comment = /#([^\\n\\r]*)/;\n    this._whitespace = /^[ \\t]+/;\n    this._endOfFile = /^(?:#[^\\n\\r]*)?$/;\n    options = options || {};\n\n    // In line mode (N-Triples or N-Quads), only simple features may be parsed\n    if (this._lineMode = !!options.lineMode) {\n      this._n3Mode = false;\n      // Don't tokenize special literals\n      for (const key in this) {\n        if (!(key in lineModeRegExps) && this[key] instanceof RegExp)\n          this[key] = invalidRegExp;\n      }\n    }\n    // When not in line mode, enable N3 functionality by default\n    else {\n      this._n3Mode = options.n3 !== false;\n    }\n    // Don't output comment tokens by default\n    this._comments = !!options.comments;\n    // Cache the last tested closing position of long literals\n    this._literalClosingPos = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_tokenizeToEnd` tokenizes as for as possible, emitting tokens through the callback\n  _tokenizeToEnd(callback, inputFinished) {\n    // Continue parsing as far as possible; the loop will return eventually\n    let input = this._input;\n    const outputComments = this._comments;\n    while (true) {\n      // Count and skip whitespace lines\n      let whiteSpaceMatch, comment;\n      while (whiteSpaceMatch = this._newline.exec(input)) {\n        // Try to find a comment\n        if (outputComments && (comment = this._comment.exec(whiteSpaceMatch[0])))\n          callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n        // Advance the input\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n        this._line++;\n      }\n      // Skip whitespace on current line\n      if (!whiteSpaceMatch && (whiteSpaceMatch = this._whitespace.exec(input)))\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n\n      // Stop for now if we're at the end\n      if (this._endOfFile.test(input)) {\n        // If the input is finished, emit EOF\n        if (inputFinished) {\n          // Try to find a final comment\n          if (outputComments && (comment = this._comment.exec(input)))\n            callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n          callback(input = null, { line: this._line, type: 'eof', value: '', prefix: '' });\n        }\n        return this._input = input;\n      }\n\n      // Look for specific token types based on the first character\n      const line = this._line, firstChar = input[0];\n      let type = '', value = '', prefix = '',\n          match = null, matchLength = 0, inconclusive = false;\n      switch (firstChar) {\n      case '^':\n        // We need at least 3 tokens lookahead to distinguish ^^<IRI> and ^^pre:fixed\n        if (input.length < 3)\n          break;\n        // Try to match a type\n        else if (input[1] === '^') {\n          this._previousMarker = '^^';\n          // Move to type IRI or prefixed name\n          input = input.substr(2);\n          if (input[0] !== '<') {\n            inconclusive = true;\n            break;\n          }\n        }\n        // If no type, it must be a path expression\n        else {\n          if (this._n3Mode) {\n            matchLength = 1;\n            type = '^';\n          }\n          break;\n        }\n        // Fall through in case the type is an IRI\n      case '<':\n        // Try to find a full IRI without escape sequences\n        if (match = this._unescapedIri.exec(input))\n          type = 'IRI', value = match[1];\n        // Try to find a full IRI with escape sequences\n        else if (match = this._iri.exec(input)) {\n          value = this._unescape(match[1]);\n          if (value === null || illegalIriChars.test(value))\n            return reportSyntaxError(this);\n          type = 'IRI';\n        }\n        // Try to find a nested triple\n        else if (input.length > 1 && input[1] === '<')\n          type = '<<', matchLength = 2;\n        // Try to find a backwards implication arrow\n        else if (this._n3Mode && input.length > 1 && input[1] === '=')\n          type = 'inverse', matchLength = 2, value = '>';\n        break;\n\n      case '>':\n        if (input.length > 1 && input[1] === '>')\n          type = '>>', matchLength = 2;\n        break;\n\n      case '_':\n        // Try to find a blank node. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a blank node.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if ((match = this._blank.exec(input)) ||\n            inputFinished && (match = this._blank.exec(`${input} `)))\n          type = 'blank', prefix = '_', value = match[1];\n        break;\n\n      case '\"':\n        // Try to find a literal without escape sequences\n        if (match = this._simpleQuotedString.exec(input))\n          value = match[1];\n        // Try to find a literal wrapped in three pairs of quotes\n        else {\n          ({ value, matchLength } = this._parseLiteral(input));\n          if (value === null)\n            return reportSyntaxError(this);\n        }\n        if (match !== null || matchLength !== 0) {\n          type = 'literal';\n          this._literalClosingPos = 0;\n        }\n        break;\n\n      case \"'\":\n        if (!this._lineMode) {\n          // Try to find a literal without escape sequences\n          if (match = this._simpleApostropheString.exec(input))\n            value = match[1];\n          // Try to find a literal wrapped in three pairs of quotes\n          else {\n            ({ value, matchLength } = this._parseLiteral(input));\n            if (value === null)\n              return reportSyntaxError(this);\n          }\n          if (match !== null || matchLength !== 0) {\n            type = 'literal';\n            this._literalClosingPos = 0;\n          }\n        }\n        break;\n\n      case '?':\n        // Try to find a variable\n        if (this._n3Mode && (match = this._variable.exec(input)))\n          type = 'var', value = match[0];\n        break;\n\n      case '@':\n        // Try to find a language code\n        if (this._previousMarker === 'literal' && (match = this._langcode.exec(input)))\n          type = 'langcode', value = match[1];\n        // Try to find a keyword\n        else if (match = this._keyword.exec(input))\n          type = match[0];\n        break;\n\n      case '.':\n        // Try to find a dot as punctuation\n        if (input.length === 1 ? inputFinished : (input[1] < '0' || input[1] > '9')) {\n          type = '.';\n          matchLength = 1;\n          break;\n        }\n        // Fall through to numerical case (could be a decimal dot)\n\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '+':\n      case '-':\n        // Try to find a number. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a number.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if (match = this._number.exec(input) ||\n            inputFinished && (match = this._number.exec(`${input} `))) {\n          type = 'literal', value = match[0];\n          prefix = (typeof match[1] === 'string' ? xsd.double :\n                    (typeof match[2] === 'string' ? xsd.decimal : xsd.integer));\n        }\n        break;\n\n      case 'B':\n      case 'b':\n      case 'p':\n      case 'P':\n      case 'G':\n      case 'g':\n        // Try to find a SPARQL-style keyword\n        if (match = this._sparqlKeyword.exec(input))\n          type = match[0].toUpperCase();\n        else\n          inconclusive = true;\n        break;\n\n      case 'f':\n      case 't':\n        // Try to match a boolean\n        if (match = this._boolean.exec(input))\n          type = 'literal', value = match[0], prefix = xsd.boolean;\n        else\n          inconclusive = true;\n        break;\n\n      case 'a':\n        // Try to find an abbreviated predicate\n        if (match = this._shortPredicates.exec(input))\n          type = 'abbreviation', value = 'a';\n        else\n          inconclusive = true;\n        break;\n\n      case '=':\n        // Try to find an implication arrow or equals sign\n        if (this._n3Mode && input.length > 1) {\n          type = 'abbreviation';\n          if (input[1] !== '>')\n            matchLength = 1, value = '=';\n          else\n            matchLength = 2, value = '>';\n        }\n        break;\n\n      case '!':\n        if (!this._n3Mode)\n          break;\n      case ',':\n      case ';':\n      case '[':\n      case ']':\n      case '(':\n      case ')':\n      case '{':\n      case '}':\n        if (!this._lineMode) {\n          matchLength = 1;\n          type = firstChar;\n        }\n        break;\n\n      default:\n        inconclusive = true;\n      }\n\n      // Some first characters do not allow an immediate decision, so inspect more\n      if (inconclusive) {\n        // Try to find a prefix\n        if ((this._previousMarker === '@prefix' || this._previousMarker === 'PREFIX') &&\n            (match = this._prefix.exec(input)))\n          type = 'prefix', value = match[1] || '';\n        // Try to find a prefixed name. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        else if ((match = this._prefixed.exec(input)) ||\n                 inputFinished && (match = this._prefixed.exec(`${input} `)))\n          type = 'prefixed', prefix = match[1] || '', value = this._unescape(match[2]);\n      }\n\n      // A type token is special: it can only be emitted after an IRI or prefixed name is read\n      if (this._previousMarker === '^^') {\n        switch (type) {\n        case 'prefixed': type = 'type';    break;\n        case 'IRI':      type = 'typeIRI'; break;\n        default:         type = '';\n        }\n      }\n\n      // What if nothing of the above was found?\n      if (!type) {\n        // We could be in streaming mode, and then we just wait for more input to arrive.\n        // Otherwise, a syntax error has occurred in the input.\n        // One exception: error on an unaccounted linebreak (= not inside a triple-quoted literal).\n        if (inputFinished || (!/^'''|^\"\"\"/.test(input) && /\\n|\\r/.test(input)))\n          return reportSyntaxError(this);\n        else\n          return this._input = input;\n      }\n\n      // Emit the parsed token\n      const token = { line: line, type: type, value: value, prefix: prefix };\n      callback(null, token);\n      this.previousToken = token;\n      this._previousMarker = type;\n      // Advance to next part to tokenize\n      input = input.substr(matchLength || match[0].length, input.length);\n    }\n\n    // Signals the syntax error through the callback\n    function reportSyntaxError(self) { callback(self._syntaxError(/^\\S*/.exec(input)[0])); }\n  }\n\n  // ### `_unescape` replaces N3 escape codes by their corresponding characters\n  _unescape(item) {\n    let invalid = false;\n    const replaced = item.replace(escapeSequence, (sequence, unicode4, unicode8, escapedChar) => {\n      // 4-digit unicode character\n      if (typeof unicode4 === 'string')\n        return String.fromCharCode(Number.parseInt(unicode4, 16));\n      // 8-digit unicode character\n      if (typeof unicode8 === 'string') {\n        let charCode = Number.parseInt(unicode8, 16);\n        return charCode <= 0xFFFF ? String.fromCharCode(Number.parseInt(unicode8, 16)) :\n          String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n      }\n      // fixed escape sequence\n      if (escapedChar in escapeReplacements)\n        return escapeReplacements[escapedChar];\n      // invalid escape sequence\n      invalid = true;\n      return '';\n    });\n    return invalid ? null : replaced;\n  }\n\n  // ### `_parseLiteral` parses a literal into an unescaped value\n  _parseLiteral(input) {\n    // Ensure we have enough lookahead to identify triple-quoted strings\n    if (input.length >= 3) {\n      // Identify the opening quote(s)\n      const opening = input.match(/^(?:\"\"\"|\"|'''|'|)/)[0];\n      const openingLength = opening.length;\n\n      // Find the next candidate closing quotes\n      let closingPos = Math.max(this._literalClosingPos, openingLength);\n      while ((closingPos = input.indexOf(opening, closingPos)) > 0) {\n        // Count backslashes right before the closing quotes\n        let backslashCount = 0;\n        while (input[closingPos - backslashCount - 1] === '\\\\')\n          backslashCount++;\n\n        // An even number of backslashes (in particular 0)\n        // means these are actual, non-escaped closing quotes\n        if (backslashCount % 2 === 0) {\n          // Extract and unescape the value\n          const raw = input.substring(openingLength, closingPos);\n          const lines = raw.split(/\\r\\n|\\r|\\n/).length - 1;\n          const matchLength = closingPos + openingLength;\n          // Only triple-quoted strings can be multi-line\n          if (openingLength === 1 && lines !== 0 ||\n              openingLength === 3 && this._lineMode)\n            break;\n          this._line += lines;\n          return { value: this._unescape(raw), matchLength };\n        }\n        closingPos++;\n      }\n      this._literalClosingPos = input.length - openingLength + 1;\n    }\n    return { value: '', matchLength: 0 };\n  }\n\n  // ### `_syntaxError` creates a syntax error for the given issue\n  _syntaxError(issue) {\n    this._input = null;\n    const err = new Error(`Unexpected \"${issue}\" on line ${this._line}.`);\n    err.context = {\n      token: undefined,\n      line: this._line,\n      previousToken: this.previousToken,\n    };\n    return err;\n  }\n\n  // ### Strips off any starting UTF BOM mark.\n  _readStartingBom(input) {\n    return input.startsWith('\\ufeff') ? input.substr(1) : input;\n  }\n\n  // ## Public methods\n\n  // ### `tokenize` starts the transformation of an N3 document into an array of tokens.\n  // The input can be a string or a stream.\n  tokenize(input, callback) {\n    this._line = 1;\n\n    // If the input is a string, continuously emit tokens through the callback until the end\n    if (typeof input === 'string') {\n      this._input = this._readStartingBom(input);\n      // If a callback was passed, asynchronously call it\n      if (typeof callback === 'function')\n        queueMicrotask(() => this._tokenizeToEnd(callback, true));\n      // If no callback was passed, tokenize synchronously and return\n      else {\n        const tokens = [];\n        let error;\n        this._tokenizeToEnd((e, t) => e ? (error = e) : tokens.push(t), true);\n        if (error) throw error;\n        return tokens;\n      }\n    }\n    // Otherwise, the input must be a stream\n    else {\n      this._pendingBuffer = null;\n      if (typeof input.setEncoding === 'function')\n        input.setEncoding('utf8');\n      // Adds the data chunk to the buffer and parses as far as possible\n      input.on('data', data => {\n        if (this._input !== null && data.length !== 0) {\n          // Prepend any previous pending writes\n          if (this._pendingBuffer) {\n            data = Buffer.concat([this._pendingBuffer, data]);\n            this._pendingBuffer = null;\n          }\n          // Hold if the buffer ends in an incomplete unicode sequence\n          if (data[data.length - 1] & 0x80) {\n            this._pendingBuffer = data;\n          }\n          // Otherwise, tokenize as far as possible\n          else {\n            // Only read a BOM at the start\n            if (typeof this._input === 'undefined')\n              this._input = this._readStartingBom(typeof data === 'string' ? data : data.toString());\n            else\n              this._input += data;\n            this._tokenizeToEnd(callback, false);\n          }\n        }\n      });\n      // Parses until the end\n      input.on('end', () => {\n        if (typeof this._input === 'string')\n          this._tokenizeToEnd(callback, true);\n      });\n      input.on('error', callback);\n    }\n  }\n}\n","// **N3Util** provides N3 utility functions.\n\nimport N3DataFactory from './N3DataFactory';\n\n// Tests whether the given term represents an IRI\nexport function isNamedNode(term) {\n  return !!term && term.termType === 'NamedNode';\n}\n\n// Tests whether the given term represents a blank node\nexport function isBlankNode(term) {\n  return !!term && term.termType === 'BlankNode';\n}\n\n// Tests whether the given term represents a literal\nexport function isLiteral(term) {\n  return !!term && term.termType === 'Literal';\n}\n\n// Tests whether the given term represents a variable\nexport function isVariable(term) {\n  return !!term && term.termType === 'Variable';\n}\n\n// Tests whether the given term represents the default graph\nexport function isDefaultGraph(term) {\n  return !!term && term.termType === 'DefaultGraph';\n}\n\n// Tests whether the given quad is in the default graph\nexport function inDefaultGraph(quad) {\n  return isDefaultGraph(quad.graph);\n}\n\n// Creates a function that prepends the given IRI to a local name\nexport function prefix(iri, factory) {\n  return prefixes({ '': iri }, factory)('');\n}\n\n// Creates a function that allows registering and expanding prefixes\nexport function prefixes(defaultPrefixes, factory) {\n  // Add all of the default prefixes\n  const prefixes = Object.create(null);\n  for (const prefix in defaultPrefixes)\n    processPrefix(prefix, defaultPrefixes[prefix]);\n  // Set the default factory if none was specified\n  factory = factory || N3DataFactory;\n\n  // Registers a new prefix (if an IRI was specified)\n  // or retrieves a function that expands an existing prefix (if no IRI was specified)\n  function processPrefix(prefix, iri) {\n    // Create a new prefix if an IRI is specified or the prefix doesn't exist\n    if (typeof iri === 'string') {\n      // Create a function that expands the prefix\n      const cache = Object.create(null);\n      prefixes[prefix] = local => {\n        return cache[local] || (cache[local] = factory.namedNode(iri + local));\n      };\n    }\n    else if (!(prefix in prefixes)) {\n      throw new Error(`Unknown prefix: ${prefix}`);\n    }\n    return prefixes[prefix];\n  }\n  return processPrefix;\n}\n","// N3.js implementations of the RDF/JS core data types\n// See https://github.com/rdfjs/representation-task-force/blob/master/interface-spec.md\n\nimport namespaces from './IRIs';\nimport { isDefaultGraph } from './N3Util';\nconst { rdf, xsd } = namespaces;\n\n// eslint-disable-next-line prefer-const\nlet DEFAULTGRAPH;\nlet _blankNodeCounter = 0;\n\nconst escapedLiteral = /^\"(.*\".*)(?=\"[^\"]*$)/;\nconst quadId = /^<<(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) ?(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+)?>>$/;\n\n// ## DataFactory singleton\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  variable,\n  literal,\n  defaultGraph,\n  quad,\n  triple: quad,\n};\nexport default DataFactory;\n\n// ## Term constructor\nexport class Term {\n  constructor(id) {\n    this.id = id;\n  }\n\n  // ### The value of this term\n  get value() {\n    return this.id;\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Term)\n      return this.id === other.id;\n    // Otherwise, compare term type and value\n    return !!other && this.termType === other.termType &&\n                      this.value    === other.value;\n  }\n\n  // ### Returns a plain object representation of this term\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n    };\n  }\n}\n\n\n// ## NamedNode constructor\nexport class NamedNode extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'NamedNode';\n  }\n}\n\n// ## Literal constructor\nexport class Literal extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'Literal';\n  }\n\n  // ### The text value of this literal\n  get value() {\n    return this.id.substring(1, this.id.lastIndexOf('\"'));\n  }\n\n  // ### The language of this literal\n  get language() {\n    // Find the last quotation mark (e.g., '\"abc\"@en-us')\n    const id = this.id;\n    let atPos = id.lastIndexOf('\"') + 1;\n    // If \"@\" it follows, return the remaining substring; empty otherwise\n    return atPos < id.length && id[atPos++] === '@' ? id.substr(atPos).toLowerCase() : '';\n  }\n\n  // ### The datatype IRI of this literal\n  get datatype() {\n    return new NamedNode(this.datatypeString);\n  }\n\n  // ### The datatype string of this literal\n  get datatypeString() {\n    // Find the last quotation mark (e.g., '\"abc\"^^http://ex.org/types#t')\n    const id = this.id, dtPos = id.lastIndexOf('\"') + 1;\n    const char = dtPos < id.length ? id[dtPos] : '';\n    // If \"^\" it follows, return the remaining substring\n    return char === '^' ? id.substr(dtPos + 2) :\n           // If \"@\" follows, return rdf:langString; xsd:string otherwise\n           (char !== '@' ? xsd.string : rdf.langString);\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both literals were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Literal)\n      return this.id === other.id;\n    // Otherwise, compare term type, value, language, and datatype\n    return !!other && !!other.datatype &&\n                      this.termType === other.termType &&\n                      this.value    === other.value    &&\n                      this.language === other.language &&\n                      this.datatype.value === other.datatype.value;\n  }\n\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n      language: this.language,\n      datatype: { termType: 'NamedNode', value: this.datatypeString },\n    };\n  }\n}\n\n// ## BlankNode constructor\nexport class BlankNode extends Term {\n  constructor(name) {\n    super(`_:${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'BlankNode';\n  }\n\n  // ### The name of this blank node\n  get value() {\n    return this.id.substr(2);\n  }\n}\n\nexport class Variable extends Term {\n  constructor(name) {\n    super(`?${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Variable';\n  }\n\n  // ### The name of this variable\n  get value() {\n    return this.id.substr(1);\n  }\n}\n\n// ## DefaultGraph constructor\nexport class DefaultGraph extends Term {\n  constructor() {\n    super('');\n    return DEFAULTGRAPH || this;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'DefaultGraph';\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through strict equality;\n    // otherwise, compare term types.\n    return (this === other) || (!!other && (this.termType === other.termType));\n  }\n}\n\n// ## DefaultGraph singleton\nDEFAULTGRAPH = new DefaultGraph();\n\n\n// ### Constructs a term from the given internal string ID\nexport function termFromId(id, factory) {\n  factory = factory || DataFactory;\n\n  // Falsy value or empty string indicate the default graph\n  if (!id)\n    return factory.defaultGraph();\n\n  // Identify the term type based on the first character\n  switch (id[0]) {\n  case '?':\n    return factory.variable(id.substr(1));\n  case '_':\n    return factory.blankNode(id.substr(2));\n  case '\"':\n    // Shortcut for internal literals\n    if (factory === DataFactory)\n      return new Literal(id);\n    // Literal without datatype or language\n    if (id[id.length - 1] === '\"')\n      return factory.literal(id.substr(1, id.length - 2));\n    // Literal with datatype or language\n    const endPos = id.lastIndexOf('\"', id.length - 1);\n    return factory.literal(id.substr(1, endPos - 1),\n            id[endPos + 1] === '@' ? id.substr(endPos + 2)\n                                   : factory.namedNode(id.substr(endPos + 3)));\n  case '<':\n    const components = quadId.exec(id);\n    return factory.quad(\n      termFromId(unescapeQuotes(components[1]), factory),\n      termFromId(unescapeQuotes(components[2]), factory),\n      termFromId(unescapeQuotes(components[3]), factory),\n      components[4] && termFromId(unescapeQuotes(components[4]), factory)\n    );\n  default:\n    return factory.namedNode(id);\n  }\n}\n\n// ### Constructs an internal string ID from the given term or ID string\nexport function termToId(term) {\n  if (typeof term === 'string')\n    return term;\n  if (term instanceof Term && term.termType !== 'Quad')\n    return term.id;\n  if (!term)\n    return DEFAULTGRAPH.id;\n\n  // Term instantiated with another library\n  switch (term.termType) {\n  case 'NamedNode':    return term.value;\n  case 'BlankNode':    return `_:${term.value}`;\n  case 'Variable':     return `?${term.value}`;\n  case 'DefaultGraph': return '';\n  case 'Literal':      return `\"${term.value}\"${\n    term.language ? `@${term.language}` :\n      (term.datatype && term.datatype.value !== xsd.string ? `^^${term.datatype.value}` : '')}`;\n  case 'Quad':\n    // To identify RDF* quad components, we escape quotes by doubling them.\n    // This avoids the overhead of backslash parsing of Turtle-like syntaxes.\n    return `<<${\n        escapeQuotes(termToId(term.subject))\n      } ${\n        escapeQuotes(termToId(term.predicate))\n      } ${\n        escapeQuotes(termToId(term.object))\n      }${\n        (isDefaultGraph(term.graph)) ? '' : ` ${termToId(term.graph)}`\n      }>>`;\n  default: throw new Error(`Unexpected termType: ${term.termType}`);\n  }\n}\n\n\n// ## Quad constructor\nexport class Quad extends Term {\n  constructor(subject, predicate, object, graph) {\n    super('');\n    this._subject   = subject;\n    this._predicate = predicate;\n    this._object    = object;\n    this._graph     = graph || DEFAULTGRAPH;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Quad';\n  }\n\n  get subject() {\n    return this._subject;\n  }\n\n  get predicate() {\n    return this._predicate;\n  }\n\n  get object() {\n    return this._object;\n  }\n\n  get graph() {\n    return this._graph;\n  }\n\n  // ### Returns a plain object representation of this quad\n  toJSON() {\n    return {\n      termType:  this.termType,\n      subject:   this._subject.toJSON(),\n      predicate: this._predicate.toJSON(),\n      object:    this._object.toJSON(),\n      graph:     this._graph.toJSON(),\n    };\n  }\n\n  // ### Returns whether this object represents the same quad as the other\n  equals(other) {\n    return !!other && this._subject.equals(other.subject)     &&\n                      this._predicate.equals(other.predicate) &&\n                      this._object.equals(other.object)       &&\n                      this._graph.equals(other.graph);\n  }\n}\nexport { Quad as Triple };\n\n// ### Escapes the quotes within the given literal\nexport function escapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"/g, '\"\"')}`);\n}\n\n// ### Unescapes the quotes within the given literal\nexport function unescapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"\"/g, '\"')}`);\n}\n\n// ### Creates an IRI\nfunction namedNode(iri) {\n  return new NamedNode(iri);\n}\n\n// ### Creates a blank node\nfunction blankNode(name) {\n  return new BlankNode(name || `n3-${_blankNodeCounter++}`);\n}\n\n// ### Creates a literal\nfunction literal(value, languageOrDataType) {\n  // Create a language-tagged string\n  if (typeof languageOrDataType === 'string')\n    return new Literal(`\"${value}\"@${languageOrDataType.toLowerCase()}`);\n\n  // Automatically determine datatype for booleans and numbers\n  let datatype = languageOrDataType ? languageOrDataType.value : '';\n  if (datatype === '') {\n    // Convert a boolean\n    if (typeof value === 'boolean')\n      datatype = xsd.boolean;\n    // Convert an integer or double\n    else if (typeof value === 'number') {\n      if (Number.isFinite(value))\n        datatype = Number.isInteger(value) ? xsd.integer : xsd.double;\n      else {\n        datatype = xsd.double;\n        if (!Number.isNaN(value))\n          value = value > 0 ? 'INF' : '-INF';\n      }\n    }\n  }\n\n  // Create a datatyped literal\n  return (datatype === '' || datatype === xsd.string) ?\n    new Literal(`\"${value}\"`) :\n    new Literal(`\"${value}\"^^${datatype}`);\n}\n\n// ### Creates a variable\nfunction variable(name) {\n  return new Variable(name);\n}\n\n// ### Returns the default graph\nfunction defaultGraph() {\n  return DEFAULTGRAPH;\n}\n\n// ### Creates a quad\nfunction quad(subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph);\n}\n","// **N3Parser** parses N3 documents.\nimport N3Lexer from './N3Lexer';\nimport N3DataFactory from './N3DataFactory';\nimport namespaces from './IRIs';\n\nlet blankNodePrefix = 0;\n\n// ## Constructor\nexport default class N3Parser {\n  constructor(options) {\n    this._contextStack = [];\n    this._graph = null;\n\n    // Set the document IRI\n    options = options || {};\n    this._setBase(options.baseIRI);\n    options.factory && initDataFactory(this, options.factory);\n\n    // Set supported features depending on the format\n    const format = (typeof options.format === 'string') ?\n                 options.format.match(/\\w*$/)[0].toLowerCase() : '',\n        isTurtle = /turtle/.test(format), isTriG = /trig/.test(format),\n        isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),\n        isN3 = this._n3Mode = /n3/.test(format),\n        isLineMode = isNTriples || isNQuads;\n    if (!(this._supportsNamedGraphs = !(isTurtle || isN3)))\n      this._readPredicateOrNamedGraph = this._readPredicate;\n    // Support triples in other graphs\n    this._supportsQuads = !(isTurtle || isTriG || isNTriples || isN3);\n    // Support nesting of triples\n    this._supportsRDFStar = format === '' || /star|\\*$/.test(format);\n    // Disable relative IRIs in N-Triples or N-Quads mode\n    if (isLineMode)\n      this._resolveRelativeIRI = iri => { return null; };\n    this._blankNodePrefix = typeof options.blankNodePrefix !== 'string' ? '' :\n                              options.blankNodePrefix.replace(/^(?!_:)/, '_:');\n    this._lexer = options.lexer || new N3Lexer({ lineMode: isLineMode, n3: isN3 });\n    // Disable explicit quantifiers by default\n    this._explicitQuantifiers = !!options.explicitQuantifiers;\n  }\n\n  // ## Static class methods\n\n  // ### `_resetBlankNodePrefix` restarts blank node prefix identification\n  static _resetBlankNodePrefix() {\n    blankNodePrefix = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_setBase` sets the base IRI to resolve relative IRIs\n  _setBase(baseIRI) {\n    if (!baseIRI) {\n      this._base = '';\n      this._basePath = '';\n    }\n    else {\n      // Remove fragment if present\n      const fragmentPos = baseIRI.indexOf('#');\n      if (fragmentPos >= 0)\n        baseIRI = baseIRI.substr(0, fragmentPos);\n      // Set base IRI and its components\n      this._base = baseIRI;\n      this._basePath   = baseIRI.indexOf('/') < 0 ? baseIRI :\n                         baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(/^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i);\n      this._baseRoot   = baseIRI[0];\n      this._baseScheme = baseIRI[1];\n    }\n  }\n\n  // ### `_saveContext` stores the current parsing context\n  // when entering a new scope (list, blank node, formula)\n  _saveContext(type, graph, subject, predicate, object) {\n    const n3Mode = this._n3Mode;\n    this._contextStack.push({\n      subject: subject, predicate: predicate, object: object,\n      graph: graph, type: type,\n      inverse: n3Mode ? this._inversePredicate : false,\n      blankPrefix: n3Mode ? this._prefixes._ : '',\n      quantified: n3Mode ? this._quantified : null,\n    });\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      // Every new scope resets the predicate direction\n      this._inversePredicate = false;\n      // In N3, blank nodes are scoped to a formula\n      // (using a dot as separator, as a blank node label cannot start with it)\n      this._prefixes._ = (this._graph ? `${this._graph.id.substr(2)}.` : '.');\n      // Quantifiers are scoped to a formula\n      this._quantified = Object.create(this._quantified);\n    }\n  }\n\n  // ### `_restoreContext` restores the parent context\n  // when leaving a scope (list, blank node, formula)\n  _restoreContext() {\n    const context = this._contextStack.pop(), n3Mode = this._n3Mode;\n    this._subject   = context.subject;\n    this._predicate = context.predicate;\n    this._object    = context.object;\n    this._graph     = context.graph;\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      this._inversePredicate = context.inverse;\n      this._prefixes._ = context.blankPrefix;\n      this._quantified = context.quantified;\n    }\n  }\n\n  // ### `_readInTopContext` reads a token when in the top context\n  _readInTopContext(token) {\n    switch (token.type) {\n    // If an EOF token arrives in the top context, signal that we're done\n    case 'eof':\n      if (this._graph !== null)\n        return this._error('Unclosed graph', token);\n      delete this._prefixes._;\n      return this._callback(null, null, this._prefixes);\n    // It could be a prefix declaration\n    case 'PREFIX':\n      this._sparqlStyle = true;\n    case '@prefix':\n      return this._readPrefix;\n    // It could be a base declaration\n    case 'BASE':\n      this._sparqlStyle = true;\n    case '@base':\n      return this._readBaseIRI;\n    // It could be a graph\n    case '{':\n      if (this._supportsNamedGraphs) {\n        this._graph = '';\n        this._subject = null;\n        return this._readSubject;\n      }\n    case 'GRAPH':\n      if (this._supportsNamedGraphs)\n        return this._readNamedGraphLabel;\n    // Otherwise, the next token must be a subject\n    default:\n      return this._readSubject(token);\n    }\n  }\n\n  // ### `_readEntity` reads an IRI, prefixed name, blank node, or variable\n  _readEntity(token, quantifier) {\n    let value;\n    switch (token.type) {\n    // Read a relative or absolute IRI\n    case 'IRI':\n    case 'typeIRI':\n      const iri = this._resolveIRI(token.value);\n      if (iri === null)\n        return this._error('Invalid IRI', token);\n      value = this._namedNode(iri);\n      break;\n    // Read a prefixed name\n    case 'type':\n    case 'prefixed':\n      const prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error(`Undefined prefix \"${token.prefix}:\"`, token);\n      value = this._namedNode(prefix + token.value);\n      break;\n    // Read a blank node\n    case 'blank':\n      value = this._blankNode(this._prefixes[token.prefix] + token.value);\n      break;\n    // Read a variable\n    case 'var':\n      value = this._variable(token.value.substr(1));\n      break;\n    // Everything else is not an entity\n    default:\n      return this._error(`Expected entity but got ${token.type}`, token);\n    }\n    // In N3 mode, replace the entity if it is quantified\n    if (!quantifier && this._n3Mode && (value.id in this._quantified))\n      value = this._quantified[value.id];\n    return value;\n  }\n\n  // ### `_readSubject` reads a quad's subject\n  _readSubject(token) {\n    this._predicate = null;\n    switch (token.type) {\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph,\n                        this._subject = this._blankNode(), null, null);\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this.RDF_NIL, null, null);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph,\n                        this._graph = this._blankNode(), null, null);\n      return this._readSubject;\n    case '}':\n       // No subject; the graph in which we are reading is closed instead\n      return this._readPunctuation(token);\n    case '@forSome':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forSome\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORSOME;\n      this._quantifier = this._blankNode;\n      return this._readQuantifierList;\n    case '@forAll':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forAll\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORALL;\n      this._quantifier = this._variable;\n      return this._readQuantifierList;\n    case 'literal':\n      if (!this._n3Mode)\n        return this._error('Unexpected literal', token);\n\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._completeSubjectLiteral;\n      }\n      else\n        this._subject = this._literal(token.value, this._namedNode(token.prefix));\n\n      break;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, null, null, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the subject entity\n      if ((this._subject = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the subject might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._readPredicateOrNamedGraph);\n    }\n\n    // The next token must be a predicate,\n    // or, if the subject was actually a graph IRI, a named graph\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // ### `_readPredicate` reads a quad's predicate\n  _readPredicate(token) {\n    const type = token.type;\n    switch (type) {\n    case 'inverse':\n      this._inversePredicate = true;\n    case 'abbreviation':\n      this._predicate = this.ABBREVIATIONS[token.value];\n      break;\n    case '.':\n    case ']':\n    case '}':\n      // Expected predicate didn't come, must have been trailing semicolon\n      if (this._predicate === null)\n        return this._error(`Unexpected ${type}`, token);\n      this._subject = null;\n      return type === ']' ? this._readBlankNodeTail(token) : this._readPunctuation(token);\n    case ';':\n      // Additional semicolons can be safely ignored\n      return this._predicate !== null ? this._readPredicate :\n             this._error('Expected predicate but got ;', token);\n    case 'blank':\n      if (!this._n3Mode)\n        return this._error('Disallowed blank node as predicate', token);\n    default:\n      if ((this._predicate = this._readEntity(token)) === undefined)\n        return;\n    }\n    // The next token must be an object\n    return this._readObject;\n  }\n\n  // ### `_readObject` reads a quad's object\n  _readObject(token) {\n    switch (token.type) {\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._readDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else\n        this._object = this._literal(token.value, this._namedNode(token.prefix));\n      break;\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph, this._subject, this._predicate,\n                        this._subject = this._blankNode());\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this._subject, this._predicate, this.RDF_NIL);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, this._subject, this._predicate, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the object entity\n      if ((this._object = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the object might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._getContextEndReader());\n    }\n    return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateOrNamedGraph` reads a quad's predicate, or a named graph\n  _readPredicateOrNamedGraph(token) {\n    return token.type === '{' ? this._readGraph(token) : this._readPredicate(token);\n  }\n\n  // ### `_readGraph` reads a graph\n  _readGraph(token) {\n    if (token.type !== '{')\n      return this._error(`Expected graph but got ${token.type}`, token);\n    // The \"subject\" we read is actually the GRAPH's label\n    this._graph = this._subject, this._subject = null;\n    return this._readSubject;\n  }\n\n  // ### `_readBlankNodeHead` reads the head of a blank node\n  _readBlankNodeHead(token) {\n    if (token.type === ']') {\n      this._subject = null;\n      return this._readBlankNodeTail(token);\n    }\n    else {\n      this._predicate = null;\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readBlankNodeTail` reads the end of a blank node\n  _readBlankNodeTail(token) {\n    if (token.type !== ']')\n      return this._readBlankNodePunctuation(token);\n\n    // Store blank node quad\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this blank node\n    const empty = this._predicate === null;\n    this._restoreContext();\n    // If the blank node was the subject, continue reading the predicate\n    if (this._object === null)\n      // If the blank node was empty, it could be a named graph label\n      return empty ? this._readPredicateOrNamedGraph : this._readPredicateAfterBlank;\n    // If the blank node was the object, restore previous context and read punctuation\n    else\n      return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateAfterBlank` reads a predicate after an anonymous blank node\n  _readPredicateAfterBlank(token) {\n    switch (token.type) {\n    case '.':\n    case '}':\n      // No predicate is coming if the triple is terminated here\n      this._subject = null;\n      return this._readPunctuation(token);\n    default:\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readListItem` reads items from a list\n  _readListItem(token) {\n    let item = null,                      // The item of the list\n        list = null,                      // The list itself\n        next = this._readListItem;        // The next function to execute\n    const previousList = this._subject,   // The previous list that contains this list\n        stack = this._contextStack,       // The stack of parent contexts\n        parent = stack[stack.length - 1]; // The parent containing the current list\n\n    switch (token.type) {\n    case '[':\n      // Stack the current list quad and start a new quad with a blank node as subject\n      this._saveContext('blank', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST,\n                        this._subject = item = this._blankNode());\n      next = this._readBlankNodeHead;\n      break;\n    case '(':\n      // Stack the current list quad and start a new list\n      this._saveContext('list', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST, this.RDF_NIL);\n      this._subject = null;\n      break;\n    case ')':\n      // Closing the list; restore the parent context\n      this._restoreContext();\n      // If this list is contained within a parent list, return the membership quad here.\n      // This will be `<parent list element> rdf:first <this list>.`.\n      if (stack.length !== 0 && stack[stack.length - 1].type === 'list')\n        this._emit(this._subject, this._predicate, this._object, this._graph);\n      // Was this list the parent's subject?\n      if (this._predicate === null) {\n        // The next token is the predicate\n        next = this._readPredicate;\n        // No list tail if this was an empty list\n        if (this._subject === this.RDF_NIL)\n          return next;\n      }\n      // The list was in the parent context's object\n      else {\n        next = this._getContextEndReader();\n        // No list tail if this was an empty list\n        if (this._object === this.RDF_NIL)\n          return next;\n      }\n      // Close the list by making the head nil\n      list = this.RDF_NIL;\n      break;\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        next = this._readListItemDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else {\n        item = this._literal(token.value, this._namedNode(token.prefix));\n        next = this._getContextEndReader();\n      }\n      break;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    default:\n      if ((item = this._readEntity(token)) === undefined)\n        return;\n    }\n\n     // Create a new blank node if no item head was assigned yet\n    if (list === null)\n      this._subject = list = this._blankNode();\n\n    // Is this the first element of the list?\n    if (previousList === null) {\n      // This list is either the subject or the object of its parent\n      if (parent.predicate === null)\n        parent.subject = list;\n      else\n        parent.object = list;\n    }\n    else {\n      // Continue the previous list with the current list\n      this._emit(previousList, this.RDF_REST, list, this._graph);\n    }\n    // If an item was read, add it to the list\n    if (item !== null) {\n      // In N3 mode, the item might be a path\n      if (this._n3Mode && (token.type === 'IRI' || token.type === 'prefixed')) {\n        // Create a new context to add the item's path\n        this._saveContext('item', this._graph, list, this.RDF_FIRST, item);\n        this._subject = item, this._predicate = null;\n        // _readPath will restore the context and output the item\n        return this._getPathReader(this._readListItem);\n      }\n      // Output the item\n      this._emit(list, this.RDF_FIRST, item, this._graph);\n    }\n    return next;\n  }\n\n  // ### `_readDataTypeOrLang` reads an _optional_ datatype or language\n  _readDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, false);\n  }\n\n\n  // ### `_readListItemDataTypeOrLang` reads an _optional_ datatype or language in a list\n  _readListItemDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, true);\n  }\n\n  // ### `_completeLiteral` completes a literal with an optional datatype or language\n  _completeLiteral(token) {\n    // Create a simple string literal by default\n    let literal = this._literal(this._literalValue);\n\n    switch (token.type) {\n    // Create a datatyped literal\n    case 'type':\n    case 'typeIRI':\n      const datatype = this._readEntity(token);\n      if (datatype === undefined) return; // No datatype means an error occurred\n      literal = this._literal(this._literalValue, datatype);\n      token = null;\n      break;\n    // Create a language-tagged string\n    case 'langcode':\n      literal = this._literal(this._literalValue, token.value);\n      token = null;\n      break;\n    }\n\n    return { token, literal };\n  }\n\n  // Completes a literal in subject position\n  _completeSubjectLiteral(token) {\n    this._subject = this._completeLiteral(token).literal;\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // Completes a literal in object position\n  _completeObjectLiteral(token, listItem) {\n    const completed = this._completeLiteral(token);\n    if (!completed)\n      return;\n    this._object = completed.literal;\n\n    // If this literal was part of a list, write the item\n    // (we could also check the context stack, but passing in a flag is faster)\n    if (listItem)\n      this._emit(this._subject, this.RDF_FIRST, this._object, this._graph);\n    // If the token was consumed, continue with the rest of the input\n    if (completed.token === null)\n      return this._getContextEndReader();\n    // Otherwise, consume the token now\n    else {\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(completed.token);\n    }\n  }\n\n  // ### `_readFormulaTail` reads the end of a formula\n  _readFormulaTail(token) {\n    if (token.type !== '}')\n      return this._readPunctuation(token);\n\n    // Store the last quad of the formula\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this formula\n    this._restoreContext();\n    // If the formula was the subject, continue reading the predicate.\n    // If the formula was the object, read punctuation.\n    return this._object === null ? this._readPredicate : this._getContextEndReader();\n  }\n\n  // ### `_readPunctuation` reads punctuation between quads or quad parts\n  _readPunctuation(token) {\n    let next, graph = this._graph;\n    const subject = this._subject, inversePredicate = this._inversePredicate;\n    switch (token.type) {\n    // A closing brace ends a graph\n    case '}':\n      if (this._graph === null)\n        return this._error('Unexpected graph closing', token);\n      if (this._n3Mode)\n        return this._readFormulaTail(token);\n      this._graph = null;\n    // A dot just ends the statement, without sharing anything with the next\n    case '.':\n      this._subject = null;\n      next = this._contextStack.length ? this._readSubject : this._readInTopContext;\n      if (inversePredicate) this._inversePredicate = false;\n      break;\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (graph = this._readEntity(token)) !== undefined) {\n        next = this._readQuadPunctuation;\n        break;\n      }\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    if (subject !== null) {\n      const predicate = this._predicate, object = this._object;\n      if (!inversePredicate)\n        this._emit(subject, predicate, object,  graph);\n      else\n        this._emit(object,  predicate, subject, graph);\n    }\n    return next;\n  }\n\n    // ### `_readBlankNodePunctuation` reads punctuation in a blank node\n  _readBlankNodePunctuation(token) {\n    let next;\n    switch (token.type) {\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    this._emit(this._subject, this._predicate, this._object, this._graph);\n    return next;\n  }\n\n  // ### `_readQuadPunctuation` reads punctuation after a quad\n  _readQuadPunctuation(token) {\n    if (token.type !== '.')\n      return this._error('Expected dot to follow quad', token);\n    return this._readInTopContext;\n  }\n\n  // ### `_readPrefix` reads the prefix of a prefix declaration\n  _readPrefix(token) {\n    if (token.type !== 'prefix')\n      return this._error('Expected prefix to follow @prefix', token);\n    this._prefix = token.value;\n    return this._readPrefixIRI;\n  }\n\n  // ### `_readPrefixIRI` reads the IRI of a prefix declaration\n  _readPrefixIRI(token) {\n    if (token.type !== 'IRI')\n      return this._error(`Expected IRI to follow prefix \"${this._prefix}:\"`, token);\n    const prefixNode = this._readEntity(token);\n    this._prefixes[this._prefix] = prefixNode.value;\n    this._prefixCallback(this._prefix, prefixNode);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readBaseIRI` reads the IRI of a base declaration\n  _readBaseIRI(token) {\n    const iri = token.type === 'IRI' && this._resolveIRI(token.value);\n    if (!iri)\n      return this._error('Expected valid IRI to follow base declaration', token);\n    this._setBase(iri);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readNamedGraphLabel` reads the label of a named graph\n  _readNamedGraphLabel(token) {\n    switch (token.type) {\n    case 'IRI':\n    case 'blank':\n    case 'prefixed':\n      return this._readSubject(token), this._readGraph;\n    case '[':\n      return this._readNamedGraphBlankLabel;\n    default:\n      return this._error('Invalid graph label', token);\n    }\n  }\n\n  // ### `_readNamedGraphLabel` reads a blank node label of a named graph\n  _readNamedGraphBlankLabel(token) {\n    if (token.type !== ']')\n      return this._error('Invalid graph label', token);\n    this._subject = this._blankNode();\n    return this._readGraph;\n  }\n\n  // ### `_readDeclarationPunctuation` reads the punctuation of a declaration\n  _readDeclarationPunctuation(token) {\n    // SPARQL-style declarations don't have punctuation\n    if (this._sparqlStyle) {\n      this._sparqlStyle = false;\n      return this._readInTopContext(token);\n    }\n\n    if (token.type !== '.')\n      return this._error('Expected declaration to end with a dot', token);\n    return this._readInTopContext;\n  }\n\n  // Reads a list of quantified symbols from a @forSome or @forAll statement\n  _readQuantifierList(token) {\n    let entity;\n    switch (token.type) {\n    case 'IRI':\n    case 'prefixed':\n      if ((entity = this._readEntity(token, true)) !== undefined)\n        break;\n    default:\n      return this._error(`Unexpected ${token.type}`, token);\n    }\n    // Without explicit quantifiers, map entities to a quantified entity\n    if (!this._explicitQuantifiers)\n      this._quantified[entity.id] = this._quantifier(this._blankNode().value);\n    // With explicit quantifiers, output the reified quantifier\n    else {\n      // If this is the first item, start a new quantifier list\n      if (this._subject === null)\n        this._emit(this._graph || this.DEFAULTGRAPH, this._predicate,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Otherwise, continue the previous list\n      else\n        this._emit(this._subject, this.RDF_REST,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Output the list item\n      this._emit(this._subject, this.RDF_FIRST, entity, this.QUANTIFIERS_GRAPH);\n    }\n    return this._readQuantifierPunctuation;\n  }\n\n  // Reads punctuation from a @forSome or @forAll statement\n  _readQuantifierPunctuation(token) {\n    // Read more quantifiers\n    if (token.type === ',')\n      return this._readQuantifierList;\n    // End of the quantifier list\n    else {\n      // With explicit quantifiers, close the quantifier list\n      if (this._explicitQuantifiers) {\n        this._emit(this._subject, this.RDF_REST, this.RDF_NIL, this.QUANTIFIERS_GRAPH);\n        this._subject = null;\n      }\n      // Read a dot\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(token);\n    }\n  }\n\n  // ### `_getPathReader` reads a potential path and then resumes with the given function\n  _getPathReader(afterPath) {\n    this._afterPath = afterPath;\n    return this._readPath;\n  }\n\n  // ### `_readPath` reads a potential path\n  _readPath(token) {\n    switch (token.type) {\n    // Forward path\n    case '!': return this._readForwardPath;\n    // Backward path\n    case '^': return this._readBackwardPath;\n    // Not a path; resume reading where we left off\n    default:\n      const stack = this._contextStack, parent = stack.length && stack[stack.length - 1];\n      // If we were reading a list item, we still need to output it\n      if (parent && parent.type === 'item') {\n        // The list item is the remaining subejct after reading the path\n        const item = this._subject;\n        // Switch back to the context of the list\n        this._restoreContext();\n        // Output the list item\n        this._emit(this._subject, this.RDF_FIRST, item, this._graph);\n      }\n      return this._afterPath(token);\n    }\n  }\n\n  // ### `_readForwardPath` reads a '!' path\n  _readForwardPath(token) {\n    let subject, predicate;\n    const object = this._blankNode();\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's object\n    if (this._predicate === null)\n      subject = this._subject, this._subject = object;\n    // If we were reading an object, replace the subject by the path's object\n    else\n      subject = this._object,  this._object  = object;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readBackwardPath` reads a '^' path\n  _readBackwardPath(token) {\n    const subject = this._blankNode();\n    let predicate, object;\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's subject\n    if (this._predicate === null)\n      object = this._subject, this._subject = subject;\n    // If we were reading an object, replace the subject by the path's subject\n    else\n      object = this._object,  this._object  = subject;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readRDFStarTailOrGraph` reads the graph of a nested RDF* quad or the end of a nested RDF* triple\n  _readRDFStarTailOrGraph(token) {\n    if (token.type !== '>>') {\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (this._graph = this._readEntity(token)) !== undefined)\n        return this._readRDFStarTail;\n      return this._error(`Expected >> to follow \"${this._object.id}\"`, token);\n    }\n    return this._readRDFStarTail(token);\n  }\n\n  // ### `_readRDFStarTail` reads the end of a nested RDF* triple\n  _readRDFStarTail(token) {\n    if (token.type !== '>>')\n      return this._error(`Expected >> but got ${token.type}`, token);\n    // Read the quad and restore the previous context\n    const quad = this._quad(this._subject, this._predicate, this._object,\n      this._graph || this.DEFAULTGRAPH);\n    this._restoreContext();\n    // If the triple was the subject, continue by reading the predicate.\n    if (this._subject === null) {\n      this._subject = quad;\n      return this._readPredicate;\n    }\n    // If the triple was the object, read context end.\n    else {\n      this._object = quad;\n      return this._getContextEndReader();\n    }\n  }\n\n  // ### `_getContextEndReader` gets the next reader function at the end of a context\n  _getContextEndReader() {\n    const contextStack = this._contextStack;\n    if (!contextStack.length)\n      return this._readPunctuation;\n\n    switch (contextStack[contextStack.length - 1].type) {\n    case 'blank':\n      return this._readBlankNodeTail;\n    case 'list':\n      return this._readListItem;\n    case 'formula':\n      return this._readFormulaTail;\n    case '<<':\n      return this._readRDFStarTailOrGraph;\n    }\n  }\n\n  // ### `_emit` sends a quad through the callback\n  _emit(subject, predicate, object, graph) {\n    this._callback(null, this._quad(subject, predicate, object, graph || this.DEFAULTGRAPH));\n  }\n\n  // ### `_error` emits an error message through the callback\n  _error(message, token) {\n    const err = new Error(`${message} on line ${token.line}.`);\n    err.context = {\n      token: token,\n      line: token.line,\n      previousToken: this._lexer.previousToken,\n    };\n    this._callback(err);\n    this._callback = noop;\n  }\n\n  // ### `_resolveIRI` resolves an IRI against the base path\n  _resolveIRI(iri) {\n    return /^[a-z][a-z0-9+.-]*:/i.test(iri) ? iri : this._resolveRelativeIRI(iri);\n  }\n\n  // ### `_resolveRelativeIRI` resolves an IRI against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative\n  _resolveRelativeIRI(iri) {\n    // An empty relative IRI indicates the base IRI\n    if (!iri.length)\n      return this._base;\n    // Decide resolving strategy based in the first character\n    switch (iri[0]) {\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return this._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return this._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? this._baseScheme : this._baseRoot) + this._removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default:\n      // Relative IRIs cannot contain a colon in the first path segment\n      return (/^[^/:]*:/.test(iri)) ? null : this._removeDotSegments(this._basePath + iri);\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986\n  _removeDotSegments(iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!/(^|\\/)\\.\\.?($|[/#?])/.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    const length = iri.length;\n    let result = '', i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return `${result}/${iri.substr(i + 1)}`;\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  // ## Public methods\n\n  // ### `parse` parses the N3 input and emits each parsed quad through the callback\n  parse(input, quadCallback, prefixCallback) {\n    // The read callback is the next function to be executed when a token arrives.\n    // We start reading in the top context.\n    this._readCallback = this._readInTopContext;\n    this._sparqlStyle = false;\n    this._prefixes = Object.create(null);\n    this._prefixes._ = this._blankNodePrefix ? this._blankNodePrefix.substr(2)\n                                             : `b${blankNodePrefix++}_`;\n    this._prefixCallback = prefixCallback || noop;\n    this._inversePredicate = false;\n    this._quantified = Object.create(null);\n\n    // Parse synchronously if no quad callback is given\n    if (!quadCallback) {\n      const quads = [];\n      let error;\n      this._callback = (e, t) => { e ? (error = e) : t && quads.push(t); };\n      this._lexer.tokenize(input).every(token => {\n        return this._readCallback = this._readCallback(token);\n      });\n      if (error) throw error;\n      return quads;\n    }\n\n    // Parse asynchronously otherwise, executing the read callback when a token arrives\n    this._callback = quadCallback;\n    this._lexer.tokenize(input, (error, token) => {\n      if (error !== null)\n        this._callback(error), this._callback = noop;\n      else if (this._readCallback)\n        this._readCallback = this._readCallback(token);\n    });\n  }\n}\n\n// The empty function\nfunction noop() {}\n\n// Initializes the parser with the given data factory\nfunction initDataFactory(parser, factory) {\n  // Set factory methods\n  const namedNode = factory.namedNode;\n  parser._namedNode   = namedNode;\n  parser._blankNode   = factory.blankNode;\n  parser._literal     = factory.literal;\n  parser._variable    = factory.variable;\n  parser._quad        = factory.quad;\n  parser.DEFAULTGRAPH = factory.defaultGraph();\n\n  // Set common named nodes\n  parser.RDF_FIRST  = namedNode(namespaces.rdf.first);\n  parser.RDF_REST   = namedNode(namespaces.rdf.rest);\n  parser.RDF_NIL    = namedNode(namespaces.rdf.nil);\n  parser.N3_FORALL  = namedNode(namespaces.r.forAll);\n  parser.N3_FORSOME = namedNode(namespaces.r.forSome);\n  parser.ABBREVIATIONS = {\n    'a': namedNode(namespaces.rdf.type),\n    '=': namedNode(namespaces.owl.sameAs),\n    '>': namedNode(namespaces.log.implies),\n  };\n  parser.QUANTIFIERS_GRAPH = namedNode('urn:n3:quantifiers');\n}\ninitDataFactory(N3Parser.prototype, N3DataFactory);\n","// **N3Writer** writes N3 documents.\nimport namespaces from './IRIs';\nimport { default as N3DataFactory, Term } from './N3DataFactory';\nimport { isDefaultGraph } from './N3Util';\n\nconst DEFAULTGRAPH = N3DataFactory.defaultGraph();\n\nconst { rdf, xsd } = namespaces;\n\n// Characters in literals that require escaping\nconst escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapedCharacters = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n// ## Placeholder class to represent already pretty-printed terms\nclass SerializedTerm extends Term {\n  // Pretty-printed nodes are not equal to any other node\n  // (e.g., [] does not equal [])\n  equals() {\n    return false;\n  }\n}\n\n// ## Constructor\nexport default class N3Writer {\n  constructor(outputStream, options) {\n    // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n    this._prefixRegex = /$0^/;\n\n    // Shift arguments if the first argument is not a stream\n    if (outputStream && typeof outputStream.write !== 'function')\n      options = outputStream, outputStream = null;\n    options = options || {};\n    this._lists = options.lists;\n\n    // If no output stream given, send the output as string through the end callback\n    if (!outputStream) {\n      let output = '';\n      this._outputStream = {\n        write(chunk, encoding, done) { output += chunk; done && done(); },\n        end: done => { done && done(null, output); },\n      };\n      this._endStream = true;\n    }\n    else {\n      this._outputStream = outputStream;\n      this._endStream = options.end === undefined ? true : !!options.end;\n    }\n\n    // Initialize writer, depending on the format\n    this._subject = null;\n    if (!(/triple|quad/i).test(options.format)) {\n      this._lineMode = false;\n      this._graph = DEFAULTGRAPH;\n      this._baseIRI = options.baseIRI;\n      this._prefixIRIs = Object.create(null);\n      options.prefixes && this.addPrefixes(options.prefixes);\n    }\n    else {\n      this._lineMode = true;\n      this._writeQuad = this._writeQuadLine;\n    }\n  }\n\n  // ## Private methods\n\n  // ### Whether the current graph is the default graph\n  get _inDefaultGraph() {\n    return DEFAULTGRAPH.equals(this._graph);\n  }\n\n  // ### `_write` writes the argument to the output stream\n  _write(string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  }\n\n  // ### `_writeQuad` writes the quad to the output stream\n  _writeQuad(subject, predicate, object, graph, done) {\n    try {\n      // Write the graph's label if it has changed\n      if (!graph.equals(this._graph)) {\n        // Close the previous graph and start the new one\n        this._write((this._subject === null ? '' : (this._inDefaultGraph ? '.\\n' : '\\n}\\n')) +\n                    (DEFAULTGRAPH.equals(graph) ? '' : `${this._encodeIriOrBlank(graph)} {\\n`));\n        this._graph = graph;\n        this._subject = null;\n      }\n      // Don't repeat the subject if it's the same\n      if (subject.equals(this._subject)) {\n        // Don't repeat the predicate if it's the same\n        if (predicate.equals(this._predicate))\n          this._write(`, ${this._encodeObject(object)}`, done);\n        // Same subject, different predicate\n        else\n          this._write(`;\\n    ${\n                      this._encodePredicate(this._predicate = predicate)} ${\n                      this._encodeObject(object)}`, done);\n      }\n      // Different subject; write the whole quad\n      else\n        this._write(`${(this._subject === null ? '' : '.\\n') +\n                    this._encodeSubject(this._subject = subject)} ${\n                    this._encodePredicate(this._predicate = predicate)} ${\n                    this._encodeObject(object)}`, done);\n    }\n    catch (error) { done && done(error); }\n  }\n\n  // ### `_writeQuadLine` writes the quad to the output stream as a single line\n  _writeQuadLine(subject, predicate, object, graph, done) {\n    // Write the quad without prefixes\n    delete this._prefixMatch;\n    this._write(this.quadToString(subject, predicate, object, graph), done);\n  }\n\n  // ### `quadToString` serializes a quad as a string\n  quadToString(subject, predicate, object, graph) {\n    return  `${this._encodeSubject(subject)} ${\n            this._encodeIriOrBlank(predicate)} ${\n            this._encodeObject(object)\n            }${graph && graph.value ? ` ${this._encodeIriOrBlank(graph)} .\\n` : ' .\\n'}`;\n  }\n\n  // ### `quadsToString` serializes an array of quads as a string\n  quadsToString(quads) {\n    return quads.map(t => {\n      return this.quadToString(t.subject, t.predicate, t.object, t.graph);\n    }).join('');\n  }\n\n  // ### `_encodeSubject` represents a subject\n  _encodeSubject(entity) {\n    return entity.termType === 'Quad' ?\n      this._encodeQuad(entity) : this._encodeIriOrBlank(entity);\n  }\n\n  // ### `_encodeIriOrBlank` represents an IRI or blank node\n  _encodeIriOrBlank(entity) {\n    // A blank node or list is represented as-is\n    if (entity.termType !== 'NamedNode') {\n      // If it is a list head, pretty-print it\n      if (this._lists && (entity.value in this._lists))\n        entity = this.list(this._lists[entity.value]);\n      return 'id' in entity ? entity.id : `_:${entity.value}`;\n    }\n    let iri = entity.value;\n    // Use relative IRIs if requested and possible\n    if (this._baseIRI && iri.startsWith(this._baseIRI))\n      iri = iri.substr(this._baseIRI.length);\n    // Escape special characters\n    if (escape.test(iri))\n      iri = iri.replace(escapeAll, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    const prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? `<${iri}>` :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);\n  }\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral(literal) {\n    // Escape special characters\n    let value = literal.value;\n    if (escape.test(value))\n      value = value.replace(escapeAll, characterReplacer);\n\n    // Write a language-tagged literal\n    if (literal.language)\n      return `\"${value}\"@${literal.language}`;\n\n    // Write dedicated literals per data type\n    if (this._lineMode) {\n      // Only abbreviate strings in N-Triples or N-Quads\n      if (literal.datatype.value === xsd.string)\n        return `\"${value}\"`;\n    }\n    else {\n      // Use common datatype abbreviations in Turtle or TriG\n      switch (literal.datatype.value) {\n      case xsd.string:\n        return `\"${value}\"`;\n      case xsd.boolean:\n        if (value === 'true' || value === 'false')\n          return value;\n        break;\n      case xsd.integer:\n        if (/^[+-]?\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.decimal:\n        if (/^[+-]?\\d*\\.\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.double:\n        if (/^[+-]?(?:\\d+\\.\\d*|\\.?\\d+)[eE][+-]?\\d+$/.test(value))\n          return value;\n        break;\n      }\n    }\n\n    // Write a regular datatyped literal\n    return `\"${value}\"^^${this._encodeIriOrBlank(literal.datatype)}`;\n  }\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate(predicate) {\n    return predicate.value === rdf.type ? 'a' : this._encodeIriOrBlank(predicate);\n  }\n\n  // ### `_encodeObject` represents an object\n  _encodeObject(object) {\n    switch (object.termType) {\n    case 'Quad':\n      return this._encodeQuad(object);\n    case 'Literal':\n      return this._encodeLiteral(object);\n    default:\n      return this._encodeIriOrBlank(object);\n    }\n  }\n\n  // ### `_encodeQuad` encodes an RDF* quad\n  _encodeQuad({ subject, predicate, object, graph }) {\n    return `<<${\n      this._encodeSubject(subject)} ${\n      this._encodePredicate(predicate)} ${\n      this._encodeObject(object)}${\n      isDefaultGraph(graph) ? '' : ` ${this._encodeIriOrBlank(graph)}`}>>`;\n  }\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite() {\n    throw new Error('Cannot write because the writer has been closed.');\n  }\n\n  // ### `addQuad` adds the quad to the output stream\n  addQuad(subject, predicate, object, graph, done) {\n    // The quad was given as an object, so shift parameters\n    if (object === undefined)\n      this._writeQuad(subject.subject, subject.predicate, subject.object, subject.graph, predicate);\n    // The optional `graph` parameter was not provided\n    else if (typeof graph === 'function')\n      this._writeQuad(subject, predicate, object, DEFAULTGRAPH, graph);\n    // The `graph` parameter was provided\n    else\n      this._writeQuad(subject, predicate, object, graph || DEFAULTGRAPH, done);\n  }\n\n  // ### `addQuads` adds the quads to the output stream\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix(prefix, iri, done) {\n    const prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  }\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes(prefixes, done) {\n    // Ignore prefixes if not supported by the serialization\n    if (!this._prefixIRIs)\n      return done && done();\n\n    // Write all new prefixes\n    let hasPrefixes = false;\n    for (let prefix in prefixes) {\n      let iri = prefixes[prefix];\n      if (typeof iri !== 'string')\n        iri = iri.value;\n      hasPrefixes = true;\n      // Finish a possible pending quad\n      if (this._subject !== null) {\n        this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n        this._subject = null, this._graph = '';\n      }\n      // Store and write the prefix\n      this._prefixIRIs[iri] = (prefix += ':');\n      this._write(`@prefix ${prefix} <${iri}>.\\n`);\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      let IRIlist = '', prefixList = '';\n      for (const prefixIRI in this._prefixIRIs) {\n        IRIlist += IRIlist ? `|${prefixIRI}` : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + this._prefixIRIs[prefixIRI];\n      }\n      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp(`^(?:${prefixList})[^\\/]*$|` +\n                                     `^(${IRIlist})([a-zA-Z][\\\\-_a-zA-Z0-9]*)$`);\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  }\n\n  // ### `blank` creates a blank node with the given content\n  blank(predicate, object) {\n    let children = predicate, child, length;\n    // Empty blank node\n    if (predicate === undefined)\n      children = [];\n    // Blank node passed as blank(Term(\"predicate\"), Term(\"object\"))\n    else if (predicate.termType)\n      children = [{ predicate: predicate, object: object }];\n    // Blank node passed as blank({ predicate: predicate, object: object })\n    else if (!('length' in predicate))\n      children = [predicate];\n\n    switch (length = children.length) {\n    // Generate an empty blank node\n    case 0:\n      return new SerializedTerm('[]');\n    // Generate a non-nested one-triple blank node\n    case 1:\n      child = children[0];\n      if (!(child.object instanceof SerializedTerm))\n        return new SerializedTerm(`[ ${this._encodePredicate(child.predicate)} ${\n                                  this._encodeObject(child.object)} ]`);\n    // Generate a multi-triple or nested blank node\n    default:\n      let contents = '[';\n      // Write all triples in order\n      for (let i = 0; i < length; i++) {\n        child = children[i];\n        // Write only the object is the predicate is the same as the previous\n        if (child.predicate.equals(predicate))\n          contents += `, ${this._encodeObject(child.object)}`;\n        // Otherwise, write the predicate and the object\n        else {\n          contents += `${(i ? ';\\n  ' : '\\n  ') +\n                      this._encodePredicate(child.predicate)} ${\n                      this._encodeObject(child.object)}`;\n          predicate = child.predicate;\n        }\n      }\n      return new SerializedTerm(`${contents}\\n]`);\n    }\n  }\n\n  // ### `list` creates a list node with the given content\n  list(elements) {\n    const length = elements && elements.length || 0, contents = new Array(length);\n    for (let i = 0; i < length; i++)\n      contents[i] = this._encodeObject(elements[i]);\n    return new SerializedTerm(`(${contents.join(' ')})`);\n  }\n\n  // ### `end` signals the end of the output stream\n  end(done) {\n    // Finish a possible pending quad\n    if (this._subject !== null) {\n      this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n      this._subject = null;\n    }\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    let singleDone = done && ((error, result) => { singleDone = null, done(error, result); });\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  }\n}\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  let result = escapedCharacters[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n","// **N3Store** objects store N3 quads by graph in memory.\nimport { default as N3DataFactory, termToId, termFromId } from './N3DataFactory';\nimport { Readable } from 'readable-stream';\nimport namespaces from './IRIs';\n\n// ## Constructor\nexport default class N3Store {\n  constructor(quads, options) {\n    // The number of quads is initially zero\n    this._size = 0;\n    // `_graphs` contains subject, predicate, and object indexes per graph\n    this._graphs = Object.create(null);\n    // `_ids` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers,\n    // saving memory by using only numbers as keys in `_graphs`\n    this._id = 0;\n    this._ids = Object.create(null);\n    this._ids['><'] = 0; // dummy entry, so the first actual key is non-zero\n    this._entities = Object.create(null); // inverse of `_ids`\n    // `_blankNodeIndex` is the index of the last automatically named blank node\n    this._blankNodeIndex = 0;\n\n    // Shift parameters if `quads` is not given\n    if (!options && quads && !quads[0])\n      options = quads, quads = null;\n    options = options || {};\n    this._factory = options.factory || N3DataFactory;\n\n    // Add quads if passed\n    if (quads)\n      this.addQuads(quads);\n  }\n\n  // ## Public properties\n\n  // ### `size` returns the number of quads in the store\n  get size() {\n    // Return the quad count if if was cached\n    let size = this._size;\n    if (size !== null)\n      return size;\n\n    // Calculate the number of quads by counting to the deepest level\n    size = 0;\n    const graphs = this._graphs;\n    let subjects, subject;\n    for (const graphKey in graphs)\n      for (const subjectKey in (subjects = graphs[graphKey].subjects))\n        for (const predicateKey in (subject = subjects[subjectKey]))\n          size += Object.keys(subject[predicateKey]).length;\n    return this._size = size;\n  }\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a quad to a three-layered index.\n  // Returns if the index has changed, if the entry did not already exist.\n  _addToIndex(index0, key0, key1, key2) {\n    // Create layers as necessary\n    const index1 = index0[key0] || (index0[key0] = {});\n    const index2 = index1[key1] || (index1[key1] = {});\n    // Setting the key to _any_ value signals the presence of the quad\n    const existed = key2 in index2;\n    if (!existed)\n      index2[key2] = null;\n    return !existed;\n  }\n\n  // ### `_removeFromIndex` removes a quad from a three-layered index\n  _removeFromIndex(index0, key0, key1, key2) {\n    // Remove the quad from the index\n    const index1 = index0[key0], index2 = index1[key1];\n    delete index2[key2];\n\n    // Remove intermediary index layers if they are empty\n    for (const key in index2) return;\n    delete index1[key1];\n    for (const key in index1) return;\n    delete index0[key0];\n  }\n\n  // ### `_findInIndex` finds a set of quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting quad\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graph` will be the graph of the created quads.\n  // If `callback` is given, each result is passed through it\n  // and iteration halts when it returns truthy for any quad.\n  // If instead `array` is given, each result is added to the array.\n  _findInIndex(index0, key0, key1, key2, name0, name1, name2, graph, callback, array) {\n    let tmp, index1, index2;\n    // Depending on the number of variables, keys or reverse index are faster\n    const varCount = !key0 + !key1 + !key2,\n        entityKeys = varCount > 1 ? Object.keys(this._ids) : this._entities;\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      const entity0 = entityKeys[value0];\n\n      if (index1 = index0[value0]) {\n        // If a key is specified, use only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          const entity1 = entityKeys[value1];\n\n          if (index2 = index1[value1]) {\n            // If a key is specified, use only that part of index 2, if it exists.\n            const values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2);\n            // Create quads for all items found in index 2.\n            for (let l = 0; l < values.length; l++) {\n              const parts = { subject: null, predicate: null, object: null };\n              parts[name0] = termFromId(entity0, this._factory);\n              parts[name1] = termFromId(entity1, this._factory);\n              parts[name2] = termFromId(entityKeys[values[l]], this._factory);\n              const quad = this._factory.quad(\n                parts.subject, parts.predicate, parts.object, termFromId(graph, this._factory));\n              if (array)\n                array.push(quad);\n              else if (callback(quad))\n                return true;\n            }\n          }\n        }\n      }\n    }\n    return array;\n  }\n\n  // ### `_loop` executes the callback on all keys of index 0\n  _loop(index0, callback) {\n    for (const key0 in index0)\n      callback(key0);\n  }\n\n  // ### `_loopByKey0` executes the callback on all keys of a certain entry in index 0\n  _loopByKey0(index0, key0, callback) {\n    let index1, key1;\n    if (index1 = index0[key0]) {\n      for (key1 in index1)\n        callback(key1);\n    }\n  }\n\n  // ### `_loopByKey1` executes the callback on given keys of all entries in index 0\n  _loopByKey1(index0, key1, callback) {\n    let key0, index1;\n    for (key0 in index0) {\n      index1 = index0[key0];\n      if (index1[key1])\n        callback(key0);\n    }\n  }\n\n  // ### `_loopBy2Keys` executes the callback on given keys of certain entries in index 2\n  _loopBy2Keys(index0, key0, key1, callback) {\n    let index1, index2, key2;\n    if ((index1 = index0[key0]) && (index2 = index1[key1])) {\n      for (key2 in index2)\n        callback(key2);\n    }\n  }\n\n  // ### `_countInIndex` counts matching quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  _countInIndex(index0, key0, key1, key2) {\n    let count = 0, tmp, index1, index2;\n\n    // If a key is specified, count only that part of index 0\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      if (index1 = index0[value0]) {\n        // If a key is specified, count only that part of index 1\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          if (index2 = index1[value1]) {\n            // If a key is specified, count the quad if it exists\n            if (key2) (key2 in index2) && count++;\n            // Otherwise, count all quads\n            else count += Object.keys(index2).length;\n          }\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `_getGraphs` returns an array with the given graph,\n  // or all graphs if the argument is null or undefined.\n  _getGraphs(graph) {\n    if (!isString(graph))\n      return this._graphs;\n    const graphs = {};\n    graphs[graph] = this._graphs[graph];\n    return graphs;\n  }\n\n  // ### `_uniqueEntities` returns a function that accepts an entity ID\n  // and passes the corresponding entity to callback if it hasn't occurred before.\n  _uniqueEntities(callback) {\n    const uniqueIds = Object.create(null);\n    return id => {\n      if (!(id in uniqueIds)) {\n        uniqueIds[id] = true;\n        callback(termFromId(this._entities[id], this._factory));\n      }\n    };\n  }\n\n  // ## Public methods\n\n  // ### `add` adds the specified quad to the dataset.\n  // Returns the dataset instance it was called on.\n  // Existing quads, as defined in Quad.equals, will be ignored.\n  add(quad) {\n    this.addQuad(quad);\n    return this;\n  }\n\n  // ### `addQuad` adds a new quad to the store.\n  // Returns if the quad index has changed, if the quad did not already exist.\n  addQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find the graph that will contain the triple\n    let graphItem = this._graphs[graph];\n    // Create the graph if it doesn't exist yet\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} };\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway\n      Object.freeze(graphItem);\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    const ids = this._ids;\n    const entities = this._entities;\n    subject   = ids[subject]   || (ids[entities[++this._id] = subject]   = this._id);\n    predicate = ids[predicate] || (ids[entities[++this._id] = predicate] = this._id);\n    object    = ids[object]    || (ids[entities[++this._id] = object]    = this._id);\n\n    const changed = this._addToIndex(graphItem.subjects,   subject,   predicate, object);\n    this._addToIndex(graphItem.predicates, predicate, object,    subject);\n    this._addToIndex(graphItem.objects,    object,    subject,   predicate);\n\n    // The cached quad count is now invalid\n    this._size = null;\n    return changed;\n  }\n\n  // ### `addQuads` adds multiple quads to the store\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `delete` removes the specified quad from the dataset.\n  // Returns the dataset instance it was called on.\n  delete(quad) {\n    this.removeQuad(quad);\n    return this;\n  }\n\n  // ### `has` determines whether a dataset includes a certain quad.\n  // Returns true or false as appropriate.\n  has(quad) {\n    const quads = this.getQuads(quad.subject, quad.predicate, quad.object, quad.graph);\n    return quads.length !== 0;\n  }\n\n  // ### `import` adds a stream of quads to the store\n  import(stream) {\n    stream.on('data', quad => { this.addQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeQuad` removes a quad from the store if it exists\n  removeQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find internal identifiers for all components\n    // and verify the quad exists.\n    const ids = this._ids, graphs = this._graphs;\n    let graphItem, subjects, predicates;\n    if (!(subject    = ids[subject]) || !(predicate = ids[predicate]) ||\n        !(object     = ids[object])  || !(graphItem = graphs[graph])  ||\n        !(subjects   = graphItem.subjects[subject]) ||\n        !(predicates = subjects[predicate]) ||\n        !(object in predicates))\n      return false;\n\n    // Remove it from all indexes\n    this._removeFromIndex(graphItem.subjects,   subject,   predicate, object);\n    this._removeFromIndex(graphItem.predicates, predicate, object,    subject);\n    this._removeFromIndex(graphItem.objects,    object,    subject,   predicate);\n    if (this._size !== null) this._size--;\n\n    // Remove the graph if it is empty\n    for (subject in graphItem.subjects) return true;\n    delete graphs[graph];\n    return true;\n  }\n\n  // ### `removeQuads` removes multiple quads from the store\n  removeQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.removeQuad(quads[i]);\n  }\n\n  // ### `remove` removes a stream of quads from the store\n  remove(stream) {\n    stream.on('data', quad => { this.removeQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeMatches` removes all matching quads from the store\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  removeMatches(subject, predicate, object, graph) {\n    const stream = new Readable({ objectMode: true });\n\n    stream._read = () => {\n      for (const quad of this.getQuads(subject, predicate, object, graph))\n        stream.push(quad);\n      stream.push(null);\n    };\n\n    return this.remove(stream);\n  }\n\n  // ### `deleteGraph` removes all triples with the given graph from the store\n  deleteGraph(graph) {\n    return this.removeMatches(null, null, null, graph);\n  }\n\n  // ### `getQuads` returns an array of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const quads = [], graphs = this._getGraphs(graph), ids = this._ids;\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return quads;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the object index will be the fastest\n            this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                              'object', 'subject', 'predicate', graphId, null, quads);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            this._findInIndex(content.subjects, subjectId, predicateId, null,\n                              'subject', 'predicate', 'object', graphId, null, quads);\n        }\n        else if (predicateId)\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          this._findInIndex(content.predicates, predicateId, objectId, null,\n                            'predicate', 'object', 'subject', graphId, null, quads);\n        else if (objectId)\n          // If only object is given, the object index will be the fastest\n          this._findInIndex(content.objects, objectId, null, null,\n                            'object', 'subject', 'predicate', graphId, null, quads);\n        else\n          // If nothing is given, iterate subjects and predicates first\n          this._findInIndex(content.subjects, null, null, null,\n                            'subject', 'predicate', 'object', graphId, null, quads);\n      }\n    }\n    return quads;\n  }\n\n  // ### `match` returns a new dataset that is comprised of all quads in the current instance matching the given arguments.\n  // The logic described in Quad Matching is applied for each quad in this dataset to check if it should be included in the output dataset.\n  // Note: This method always returns a new DatasetCore, even if that dataset contains no quads.\n  // Note: Since a DatasetCore is an unordered set, the order of the quads within the returned sequence is arbitrary.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  // For backwards compatibility, the object return also implements the Readable stream interface.\n  match(subject, predicate, object, graph) {\n    return new DatasetCoreAndReadableStream(this, subject, predicate, object, graph);\n  }\n\n  // ### `countQuads` returns the number of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  countQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let count = 0, content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return 0;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subject) {\n          if (object)\n            // If subject and object are given, the object index will be the fastest\n            count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            count += this._countInIndex(content.subjects, subjectId, predicateId, objectId);\n        }\n        else if (predicate) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          count += this._countInIndex(content.predicates, predicateId, objectId, subjectId);\n        }\n        else {\n          // If only object is possibly given, the object index will be the fastest\n          count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `forEach` executes the callback on all quads.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forEach(callback, subject, predicate, object, graph) {\n    this.some(quad => {\n      callback(quad);\n      return false;\n    }, subject, predicate, object, graph);\n  }\n\n  // ### `every` executes the callback on all quads,\n  // and returns `true` if it returns truthy for all them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  every(callback, subject, predicate, object, graph) {\n    let some = false;\n    const every = !this.some(quad => {\n      some = true;\n      return !callback(quad);\n    }, subject, predicate, object, graph);\n    return some && every;\n  }\n\n  // ### `some` executes the callback on all quads,\n  // and returns `true` if it returns truthy for any of them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  some(callback, subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return false;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId) {\n          // If subject and object are given, the object index will be the fastest\n            if (this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                                  'object', 'subject', 'predicate', graphId, callback, null))\n              return true;\n          }\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            if (this._findInIndex(content.subjects, subjectId, predicateId, null,\n                                  'subject', 'predicate', 'object', graphId, callback, null))\n              return true;\n        }\n        else if (predicateId) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          if (this._findInIndex(content.predicates, predicateId, objectId, null,\n                                'predicate', 'object', 'subject', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else if (objectId) {\n          // If only object is given, the object index will be the fastest\n          if (this._findInIndex(content.objects, objectId, null, null,\n                                'object', 'subject', 'predicate', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else\n        // If nothing is given, iterate subjects and predicates first\n        if (this._findInIndex(content.subjects, null, null, null,\n                              'subject', 'predicate', 'object', graphId, callback, null)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  // ### `getSubjects` returns all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getSubjects(predicate, object, graph) {\n    const results = [];\n    this.forSubjects(s => { results.push(s); }, predicate, object, graph);\n    return results;\n  }\n\n  // ### `forSubjects` executes the callback on all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forSubjects(callback, predicate, object, graph) {\n    // Convert terms to internal string representation\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, predicateId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (predicateId) {\n          if (objectId)\n            // If predicate and object are given, the POS index is best.\n            this._loopBy2Keys(content.predicates, predicateId, objectId, callback);\n          else\n            // If only predicate is given, the SPO index is best.\n            this._loopByKey1(content.subjects, predicateId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the OSP index is best.\n          this._loopByKey0(content.objects, objectId, callback);\n        else\n          // If no params given, iterate all the subjects\n          this._loop(content.subjects, callback);\n      }\n    }\n  }\n\n  // ### `getPredicates` returns all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getPredicates(subject, object, graph) {\n    const results = [];\n    this.forPredicates(p => { results.push(p); }, subject, object, graph);\n    return results;\n  }\n\n  // ### `forPredicates` executes the callback on all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forPredicates(callback, subject, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject) && !(subjectId = ids[subject]) ||\n        isString(object)  && !(objectId  = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the OSP index is best.\n            this._loopBy2Keys(content.objects, objectId, subjectId, callback);\n          else\n            // If only subject is given, the SPO index is best.\n            this._loopByKey0(content.subjects, subjectId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the POS index is best.\n          this._loopByKey1(content.predicates, objectId, callback);\n        else\n          // If no params given, iterate all the predicates.\n          this._loop(content.predicates, callback);\n      }\n    }\n  }\n\n  // ### `getObjects` returns all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getObjects(subject, predicate, graph) {\n    const results = [];\n    this.forObjects(o => { results.push(o); }, subject, predicate, graph);\n    return results;\n  }\n\n  // ### `forObjects` executes the callback on all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forObjects(callback, subject, predicate, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, predicateId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject]) ||\n        isString(predicate) && !(predicateId = ids[predicate]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (predicateId)\n            // If subject and predicate are given, the SPO index is best.\n            this._loopBy2Keys(content.subjects, subjectId, predicateId, callback);\n          else\n            // If only subject is given, the OSP index is best.\n            this._loopByKey1(content.objects, subjectId, callback);\n        }\n        else if (predicateId)\n          // If only predicate is given, the POS index is best.\n          this._loopByKey0(content.predicates, predicateId, callback);\n        else\n          // If no params given, iterate all the objects.\n          this._loop(content.objects, callback);\n      }\n    }\n  }\n\n  // ### `getGraphs` returns all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getGraphs(subject, predicate, object) {\n    const results = [];\n    this.forGraphs(g => { results.push(g); }, subject, predicate, object);\n    return results;\n  }\n\n  // ### `forGraphs` executes the callback on all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forGraphs(callback, subject, predicate, object) {\n    for (const graph in this._graphs) {\n      this.some(quad => {\n        callback(quad.graph);\n        return true; // Halt iteration of some()\n      }, subject, predicate, object, graph);\n    }\n  }\n\n  // ### `createBlankNode` creates a new blank node, returning its name\n  createBlankNode(suggestedName) {\n    let name, index;\n    // Generate a name based on the suggested name\n    if (suggestedName) {\n      name = suggestedName = `_:${suggestedName}`, index = 1;\n      while (this._ids[name])\n        name = suggestedName + index++;\n    }\n    // Generate a generic blank node name\n    else {\n      do { name = `_:b${this._blankNodeIndex++}`; }\n      while (this._ids[name]);\n    }\n    // Add the blank node to the entities, avoiding the generation of duplicates\n    this._ids[name] = ++this._id;\n    this._entities[this._id] = name;\n    return this._factory.blankNode(name.substr(2));\n  }\n\n  // ### `extractLists` finds and removes all list triples\n  // and returns the items per list.\n  extractLists({ remove = false, ignoreErrors = false } = {}) {\n    const lists = {}; // has scalar keys so could be a simple Object\n    const onError = ignoreErrors ? (() => true) :\n                  ((node, message) => { throw new Error(`${node.value} ${message}`); });\n\n    // Traverse each list from its tail\n    const tails = this.getQuads(null, namespaces.rdf.rest, namespaces.rdf.nil, null);\n    const toRemove = remove ? [...tails] : [];\n    tails.forEach(tailQuad => {\n      const items = [];             // the members found as objects of rdf:first quads\n      let malformed = false;      // signals whether the current list is malformed\n      let head;                   // the head of the list (_:b1 in above example)\n      let headPos;                // set to subject or object when head is set\n      const graph = tailQuad.graph; // make sure list is in exactly one graph\n\n      // Traverse the list from tail to end\n      let current = tailQuad.subject;\n      while (current && !malformed) {\n        const objectQuads = this.getQuads(null, null, current, null);\n        const subjectQuads = this.getQuads(current, null, null, null);\n        let quad, first = null, rest = null, parent = null;\n\n        // Find the first and rest of this list node\n        for (let i = 0; i < subjectQuads.length && !malformed; i++) {\n          quad = subjectQuads[i];\n          if (!quad.graph.equals(graph))\n            malformed = onError(current, 'not confined to single graph');\n          else if (head)\n            malformed = onError(current, 'has non-list arcs out');\n\n          // one rdf:first\n          else if (quad.predicate.value === namespaces.rdf.first) {\n            if (first)\n              malformed = onError(current, 'has multiple rdf:first arcs');\n            else\n              toRemove.push(first = quad);\n          }\n\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (rest)\n              malformed = onError(current, 'has multiple rdf:rest arcs');\n            else\n              toRemove.push(rest = quad);\n          }\n\n          // alien triple\n          else if (objectQuads.length)\n            malformed = onError(current, 'can\\'t be subject and object');\n          else {\n            head = quad; // e.g. { (1 2 3) :p :o }\n            headPos = 'subject';\n          }\n        }\n\n        // { :s :p (1 2) } arrives here with no head\n        // { (1 2) :p :o } arrives here with head set to the list.\n        for (let i = 0; i < objectQuads.length && !malformed; ++i) {\n          quad = objectQuads[i];\n          if (head)\n            malformed = onError(current, 'can\\'t have coreferences');\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (parent)\n              malformed = onError(current, 'has incoming rdf:rest arcs');\n            else\n              parent = quad;\n          }\n          else {\n            head = quad; // e.g. { :s :p (1 2) }\n            headPos = 'object';\n          }\n        }\n\n        // Store the list item and continue with parent\n        if (!first)\n          malformed = onError(current, 'has no list head');\n        else\n          items.unshift(first.object);\n        current = parent && parent.subject;\n      }\n\n      // Don't remove any quads if the list is malformed\n      if (malformed)\n        remove = false;\n      // Store the list under the value of its head\n      else if (head)\n        lists[head[headPos].value] = items;\n    });\n\n    // Remove list quads if requested\n    if (remove)\n      this.removeQuads(toRemove);\n    return lists;\n  }\n\n  // ### Store is an iterable.\n  // Can be used where iterables are expected: for...of loops, array spread operator,\n  // `yield*`, and destructuring assignment (order is not guaranteed).\n  *[Symbol.iterator]() {\n    yield* this.getQuads();\n  }\n}\n\n// Determines whether the argument is a string\nfunction isString(s) {\n  return typeof s === 'string' || s instanceof String;\n}\n\n/**\n * A class that implements both DatasetCore and Readable.\n */\nclass DatasetCoreAndReadableStream extends Readable {\n  constructor(n3Store, subject, predicate, object, graph) {\n    super({ objectMode: true });\n    Object.assign(this, { n3Store, subject, predicate, object, graph });\n  }\n\n  get filtered() {\n    if (!this._filtered) {\n      const { n3Store, graph, object, predicate, subject } = this;\n      const quads = n3Store.getQuads(subject, predicate, object, graph);\n      this._filtered = new N3Store(quads, { factory: n3Store._factory });\n    }\n    return this._filtered;\n  }\n  get size() {\n    return this.filtered.size;\n  }\n\n  _read() {\n    for (const quad of this.filtered.getQuads())\n      this.push(quad);\n    this.push(null);\n  }\n\n  add(quad) {\n    return this.filtered.add(quad);\n  }\n\n  delete(quad) {\n    return this.filtered.delete(quad);\n  }\n\n  has(quad) {\n    return this.filtered.has(quad);\n  }\n\n  match(subject, predicate, object, graph) {\n    return new DatasetCoreAndReadableStream(this.filtered, subject, predicate, object, graph);\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.filtered.getQuads();\n  }\n}\n","// **N3StreamParser** parses a text stream into a quad stream.\nimport N3Parser from './N3Parser';\nimport { Transform } from 'readable-stream';\n\n// ## Constructor\nexport default class N3StreamParser extends Transform {\n  constructor(options) {\n    super({ decodeStrings: true });\n    this._readableState.objectMode = true;\n\n    // Set up parser with dummy stream to obtain `data` and `end` callbacks\n    const parser = new N3Parser(options);\n    let onData, onEnd;\n    parser.parse({\n      on: (event, callback) => {\n        switch (event) {\n        case 'data': onData = callback; break;\n        case 'end':   onEnd = callback; break;\n        }\n      },\n    },\n      // Handle quads by pushing them down the pipeline\n      (error, quad) => { error && this.emit('error', error) || quad && this.push(quad); },\n      // Emit prefixes through the `prefix` event\n      (prefix, uri) => { this.emit('prefix', prefix, uri); }\n    );\n\n    // Implement Transform methods through parser callbacks\n    this._transform = (chunk, encoding, done) => { onData(chunk); done(); };\n    this._flush = done => { onEnd(); done(); };\n  }\n\n  // ### Parses a stream of strings\n  import(stream) {\n    stream.on('data',  chunk => { this.write(chunk); });\n    stream.on('end',   ()      => { this.end(); });\n    stream.on('error', error => { this.emit('error', error); });\n    return this;\n  }\n}\n","// **N3StreamWriter** serializes a quad stream into a text stream.\nimport { Transform } from 'readable-stream';\nimport N3Writer from './N3Writer';\n\n// ## Constructor\nexport default class N3StreamWriter extends Transform {\n  constructor(options) {\n    super({ encoding: 'utf8', writableObjectMode: true });\n\n    // Set up writer with a dummy stream object\n    const writer = this._writer = new N3Writer({\n      write: (quad, encoding, callback) => { this.push(quad); callback && callback(); },\n      end: callback => { this.push(null); callback && callback(); },\n    }, options);\n\n    // Implement Transform methods on top of writer\n    this._transform = (quad, encoding, done) => { writer.addQuad(quad, done); };\n    this._flush = done => { writer.end(done); };\n  }\n\n// ### Serializes a stream of quads\n  import(stream) {\n    stream.on('data',   quad => { this.write(quad); });\n    stream.on('end',    () => { this.end(); });\n    stream.on('error',  error => { this.emit('error', error); });\n    stream.on('prefix', (prefix, iri) => { this._writer.addPrefix(prefix, iri); });\n    return this;\n  }\n}\n","/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = require('events').EventEmitter;\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n"],"names":["exports","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","base64","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","value","string","encoding","isEncoding","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2","create","module","ctor","superCtor","super_","TempCtor","RDF","XSD","SWAP","xsd","decimal","boolean","double","integer","rdf","nil","rest","langString","owl","sameAs","r","forSome","forAll","implies","escapeSequence","escapeReplacements","illegalIriChars","lineModeRegExps","_iri","_unescapedIri","_simpleQuotedString","_langcode","_blank","_newline","_comment","_whitespace","_endOfFile","invalidRegExp","N3Lexer","options","_simpleApostropheString","_prefix","_prefixed","_variable","_number","_boolean","_keyword","_sparqlKeyword","_shortPredicates","_lineMode","lineMode","_n3Mode","key","RegExp","n3","_comments","comments","_literalClosingPos","_tokenizeToEnd","callback","inputFinished","_input","outputComments","whiteSpaceMatch","comment","exec","line","_line","prefix","test","firstChar","match","matchLength","inconclusive","_previousMarker","_unescape","reportSyntaxError","_parseLiteral","toUpperCase","token","previousToken","self","_syntaxError","item","invalid","replaced","sequence","unicode4","unicode8","escapedChar","charCode","opening","openingLength","closingPos","backslashCount","raw","substring","lines","issue","err","context","_readStartingBom","startsWith","tokenize","tokens","t","_pendingBuffer","setEncoding","on","isNamedNode","term","termType","isBlankNode","isLiteral","isVariable","isDefaultGraph","inDefaultGraph","quad","graph","iri","factory","prefixes","defaultPrefixes","processPrefix","cache","local","namedNode","N3DataFactory","DEFAULTGRAPH","_blankNodeCounter","escapedLiteral","quadId","DataFactory","NamedNode","blankNode","BlankNode","variable","Variable","literal","languageOrDataType","Literal","datatype","defaultGraph","triple","Term","id","other","language","atPos","datatypeString","dtPos","char","DefaultGraph","termFromId","endPos","components","unescapeQuotes","termToId","escapeQuotes","subject","predicate","object","Quad","_subject","_predicate","_object","_graph","_","quoted","blankNodePrefix","N3Parser","_contextStack","_setBase","baseIRI","initDataFactory","format","isTurtle","isTriG","isNTriples","isNQuads","isN3","isLineMode","_supportsNamedGraphs","_readPredicateOrNamedGraph","_readPredicate","_supportsQuads","_supportsRDFStar","_resolveRelativeIRI","_blankNodePrefix","_lexer","lexer","_explicitQuantifiers","explicitQuantifiers","static","fragmentPos","_base","_basePath","_baseRoot","_baseScheme","_saveContext","n3Mode","inverse","_inversePredicate","blankPrefix","_prefixes","quantified","_quantified","_restoreContext","pop","_readInTopContext","_error","_callback","_sparqlStyle","_readPrefix","_readBaseIRI","_readSubject","_readNamedGraphLabel","_readEntity","quantifier","_resolveIRI","_namedNode","_blankNode","_readBlankNodeHead","RDF_NIL","_readListItem","_readPunctuation","N3_FORSOME","_quantifier","_readQuantifierList","N3_FORALL","_literalValue","_completeSubjectLiteral","_literal","_getPathReader","ABBREVIATIONS","_readBlankNodeTail","_readObject","_readDataTypeOrLang","_getContextEndReader","_readGraph","_readBlankNodePunctuation","_emit","empty","_readPredicateAfterBlank","next","previousList","parent","RDF_FIRST","_readListItemDataTypeOrLang","RDF_REST","_completeObjectLiteral","_completeLiteral","listItem","completed","_readCallback","_readFormulaTail","inversePredicate","_readQuadPunctuation","_readPrefixIRI","prefixNode","_prefixCallback","_readDeclarationPunctuation","_readNamedGraphBlankLabel","entity","QUANTIFIERS_GRAPH","_readQuantifierPunctuation","afterPath","_afterPath","_readPath","_readForwardPath","_readBackwardPath","_readRDFStarTailOrGraph","_readRDFStarTail","_quad","contextStack","noop","_removeDotSegments","result","pathStart","segmentStart","parse","quadCallback","prefixCallback","quads","every","parser","escapeAll","escapedCharacters","SerializedTerm","N3Writer","outputStream","_prefixRegex","_lists","lists","_outputStream","_endStream","chunk","done","_writeQuad","_writeQuadLine","_baseIRI","_prefixIRIs","addPrefixes","_inDefaultGraph","_write","_encodeIriOrBlank","_encodeObject","_encodePredicate","_encodeSubject","_prefixMatch","quadToString","quadsToString","map","_encodeQuad","characterReplacer","prefixMatch","_encodeLiteral","_blockedWrite","addQuad","addQuads","addPrefix","hasPrefixes","IRIlist","prefixList","prefixIRI","blank","child","children","contents","elements","singleDone","character","N3Store","_size","_graphs","_id","_ids","_entities","_blankNodeIndex","_factory","graphs","subjects","graphKey","subjectKey","predicateKey","keys","_addToIndex","index0","key0","key1","key2","index1","index2","existed","_removeFromIndex","_findInIndex","name0","name1","name2","entityKeys","value0","entity0","value1","entity1","values","l","_loop","_loopByKey0","_loopByKey1","_loopBy2Keys","_countInIndex","count","_getGraphs","isString","_uniqueEntities","uniqueIds","add","graphItem","predicates","objects","freeze","ids","entities","changed","delete","removeQuad","has","getQuads","import","stream","removeQuads","remove","removeMatches","Readable","objectMode","_read","deleteGraph","content","subjectId","predicateId","objectId","graphId","DatasetCoreAndReadableStream","countQuads","forEach","some","getSubjects","results","forSubjects","getPredicates","forPredicates","p","getObjects","forObjects","o","getGraphs","forGraphs","g","createBlankNode","suggestedName","index","extractLists","ignoreErrors","onError","node","tails","toRemove","tailQuad","items","head","headPos","malformed","current","objectQuads","subjectQuads","unshift","iterator","n3Store","assign","filtered","_filtered","N3StreamParser","Transform","onData","onEnd","decodeStrings","_readableState","event","emit","uri","_transform","_flush","N3StreamWriter","writableObjectMode","writer","_writer","promise","queueMicrotask","bind","window","cb","Promise","resolve","then","catch","setTimeout","codes","createErrorType","NodeError","_Base","subClass","superClass","arg1","arg2","arg3","__proto__","oneOf","expected","thing","determiner","search","this_len","endsWith","objectKeys","Duplex","Writable","v","method","allowHalfOpen","readable","once","onend","_writableState","ended","process","nextTick","onEndNT","highWaterMark","getBuffer","destroyed","PassThrough","ReadableState","debug","EElistenerCount","emitter","listeners","Stream","OurUint8Array","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","BufferList","destroyImpl","getHighWaterMark","_require$codes","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","errorOrDestroy","kProxyEvents","isDuplex","readableObjectMode","pipes","pipesCount","flowing","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","defaultEncoding","awaitDrain","readingMore","decoder","destroy","_destroy","readableAddChunk","addToFront","skipChunkCheck","er","state","emitReadable","emitReadable_","onEofChunk","chunkInvalid","getPrototypeOf","_uint8ArrayToBuffer","addChunk","maybeReadMore","_undestroy","undestroy","isPaused","enc","clear","MAX_HWM","howMuchToRead","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","listenerCount","resume","nReadingNextTick","resume_","fromList","shift","consume","endReadable","endReadableNT","wState","finished","xs","nOrig","doRead","pipe","dest","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","removeListener","onclose","onfinish","ondrain","onerror","ondata","cleanedUp","needDrain","pipeOnDrain","pause","prependListener","_events","dests","splice","ev","addListener","removeAllListeners","wrap","_this","asyncIterator","_fromList","iterable","opts","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writecb","writechunk","rs","needTransform","writeencoding","transform","flush","prefinish","err2","CorkedRequest","entry","finish","corkReq","pendingcb","onCorkedFinish","corkedRequestsFree","WritableState","realHasInstance","internalUtil","deprecate","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","finalCalled","ending","noDecode","writing","corked","bufferProcessing","onwrite","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","writev","_writev","final","_final","doWrite","onwriteDrain","holder","allBuffers","isBuf","callFinal","need","rState","hasInstance","Function","writeAfterEnd","validChunk","newChunk","decodeChunk","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","_Object$setPrototypeO","_defineProperty","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","reject","lastPromise","wrapForNext","_this2","_Object$create","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","getOwnPropertyDescriptor","_defineProperties","props","descriptor","custom","instance","Constructor","_classCallCheck","tail","protoProps","hasStrings","_getString","_getBuffer","nb","source","getOwnPropertyDescriptors","defineProperties","_objectSpread","depth","customInspect","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","ERR_STREAM_PREMATURE_CLOSE","eos","called","_len","args","_key","onlegacyfinish","writableEnded","readableEnded","onrequest","req","setHeader","abort","isRequest","ERR_MISSING_ARGS","destroyer","closed","to","popCallback","streams","destroys","reduce","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","pipeline","copyProps","SafeBuffer","nenc","retried","_normalizeEncoding","normalizeEncoding","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckExtraBytes","total","utf8CheckIncomplete","config","localStorage","warned","trace","warn"],"sourceRoot":""}